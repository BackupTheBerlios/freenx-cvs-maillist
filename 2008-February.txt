From gwright at mail.berlios.de  Mon Feb  4 23:11:47 2008
From: gwright at mail.berlios.de (gwright at BerliOS)
Date: Mon, 4 Feb 2008 23:11:47 +0100
Subject: [Freenx-cvs] r458 - nxcl/lib
Message-ID: <200802042211.m14MBldb023874@sheep.berlios.de>

Author: gwright
Date: 2008-02-04 23:11:47 +0100 (Mon, 04 Feb 2008)
New Revision: 458

Modified:
   nxcl/lib/notQt.cpp
Log:
Code cleanup


Modified: nxcl/lib/notQt.cpp
===================================================================
--- nxcl/lib/notQt.cpp	2008-01-30 08:00:54 UTC (rev 457)
+++ nxcl/lib/notQt.cpp	2008-02-04 22:11:47 UTC (rev 458)
@@ -1,11 +1,11 @@
 /***************************************************************************
-        notQt.cpp: A set of Qt like functionality, especially related
-                       to the starting of processes.
-                             -------------------
-    begin                : June 2007
-    copyright            : (C) 2007 Embedded Software Foundry Ltd. (U.K.)
-                         :     Author: Sebastian James
-    email                : seb at esfnet.co.uk
+          notQt.cpp: A set of Qt like functionality, especially related
+                     to the starting of processes.
+                            -------------------
+        begin                : June 2007
+        copyright            : (C) 2007 Embedded Software Foundry Ltd. (U.K.)
+                             :     Author: Sebastian James
+        email                : seb at esfnet.co.uk
  ***************************************************************************/
 
 /***************************************************************************
@@ -49,268 +49,270 @@
 
 // Constructor
 notQProcess::notQProcess () :
-	progName("unknown"),
-	error (NOTQPROCNOERROR),
-	pid(0),
-	signalledStart(false)
+    progName("unknown"),
+    error (NOTQPROCNOERROR),
+    pid(0),
+    signalledStart(false)
 {
-	// Set up the polling structs
-	this->p = static_cast<struct pollfd*>(malloc (2*sizeof (struct pollfd)));	
+    // Set up the polling structs
+    this->p = static_cast<struct pollfd*>(malloc (2*sizeof (struct pollfd)));	
 }
 
 // Destructor
 notQProcess::~notQProcess ()
 {
-	free (this->p);
+    free (this->p);
 }
 
-void
+    void
 notQProcess::writeIn (string& input)
 {
-	write (this->parentToChild[WRITING_END], input.c_str(), input.size());
+    write (this->parentToChild[WRITING_END], input.c_str(), input.size());
 }
 
 // fork and exec a new process using execv, which takes stdin via a
 // fifo and returns output also via a fifo.
-int
+    int
 notQProcess::start (const string& program, const list<string>& args)
 {
-	char** argarray;
-	list<string> myargs = args;
-	list<string>::iterator i;
-	unsigned int j = 0;
-	int theError;
+    char** argarray;
+    list<string> myargs = args;
+    list<string>::iterator i;
+    unsigned int j = 0;
+    int theError;
 
-	// NB: The first item in the args list should be the program name.
-	this->progName = program;
+    // NB: The first item in the args list should be the program name.
+    this->progName = program;
 
-	// Set up our pipes
-	if (pipe(parentToChild) == -1 || pipe(childToParent) == -1 || pipe(childErrToParent) == -1) {
-		return NOTQTPROCESS_FAILURE;
-	}
+    // Set up our pipes
+    if (pipe(parentToChild) == -1 || pipe(childToParent) == -1 || pipe(childErrToParent) == -1) {
+        return NOTQTPROCESS_FAILURE;
+    }
 
-	this->pid = fork();
-	switch (this->pid) {
-	case -1:
-		return NOTQTPROCESS_FAILURE;
-	case 0:
-		// This is the CHILD process
+    this->pid = fork();
 
-		// Close unwanted ends of the pipes
-		close (parentToChild[WRITING_END]);
-		close (childToParent[READING_END]);
-		close (childErrToParent[READING_END]);
+    switch (this->pid) {
+        case -1:
+            return NOTQTPROCESS_FAILURE;
+        case 0:
+            // This is the CHILD process
 
-		// Now all we have to do is make the writing file
-		// descriptors 0,1 or 2 and they will be used instead
-		// of stdout, stderr and stdin.
-		if ((dup2 (parentToChild[READING_END], STDIN)) == -1  ||
-		    (dup2 (childToParent[WRITING_END], STDOUT)) == -1 || 
-		    (dup2 (childErrToParent[WRITING_END], STDERR)) == -1) {
-			theError = errno;
-			cout << "ERROR! Couldn't get access to stdin/out/err! errno was " << theError << endl;
-			return NOTQTPROCESS_FAILURE;	
-		}
+            // Close unwanted ends of the pipes
+            close (parentToChild[WRITING_END]);
+            close (childToParent[READING_END]);
+            close (childErrToParent[READING_END]);
 
-		// Allocate memory for the program arguments
-		// 1+ to allow space for NULL terminating pointer
-		argarray = static_cast<char**>(malloc ((1+args.size()) * sizeof (char*))); 
-		for (i=myargs.begin(); i!=myargs.end(); i++) {
-			argarray[j] = static_cast<char*>(malloc ( (1+(*i).size()) * sizeof (char) ));
-			snprintf (argarray[j++], 1+(*i).size(), "%s", (*i).c_str());
-			dbgln(*i);
-		}
-		argarray[j] = NULL;
+            // Now all we have to do is make the writing file
+            // descriptors 0,1 or 2 and they will be used instead
+            // of stdout, stderr and stdin.
+            if ((dup2 (parentToChild[READING_END], STDIN)) == -1  ||
+                    (dup2 (childToParent[WRITING_END], STDOUT)) == -1 || 
+                    (dup2 (childErrToParent[WRITING_END], STDERR)) == -1) {
+                theError = errno;
+                cout << "ERROR! Couldn't get access to stdin/out/err! errno was " << theError << endl;
+                return NOTQTPROCESS_FAILURE;	
+            }
 
-		dbgln ("About to execute '" + program + "' with those arguments..");
+            // Allocate memory for the program arguments
+            // 1+ to allow space for NULL terminating pointer
+            argarray = static_cast<char**>(malloc ((1+args.size()) * sizeof (char*))); 
+            for (i=myargs.begin(); i!=myargs.end(); i++) {
+                argarray[j] = static_cast<char*>(malloc ( (1+(*i).size()) * sizeof (char) ));
+                snprintf (argarray[j++], 1+(*i).size(), "%s", (*i).c_str());
+                dbgln(*i);
+            }
+            argarray[j] = NULL;
 
-		execv (program.c_str(), argarray);
+            dbgln ("About to execute '" + program + "' with those arguments..");
 
-		// If process returns, error occurred
-		theError = errno; 
-		// This'll get picked up by parseResponse
-		cout << "notQProcess error: " << this->pid << " crashed. errno:" << theError << endl;
-		
-		// This won't get picked up by the parent process.
-		this->error = NOTQPROCCRASHED;
+            execv (program.c_str(), argarray);
 
-		// In this case, we close the pipes to signal to the parent that we crashed
-		close (parentToChild[READING_END]);
-		close (childToParent[WRITING_END]);
-		close (childErrToParent[WRITING_END]);
-		
-		// Child should exit now.
-		_exit(-1);
+            // If process returns, error occurred
+            theError = errno; 
+            // This'll get picked up by parseResponse
+            cout << "notQProcess error: " << this->pid << " crashed. errno:" << theError << endl;
 
-	default:
-		// This is the PARENT process
+            // This won't get picked up by the parent process.
+            this->error = NOTQPROCCRASHED;
 
-		// Close unwanted ends of the pipes
-		close (parentToChild[READING_END]);
-		close (childToParent[WRITING_END]);
-		close (childErrToParent[WRITING_END]);
+            // In this case, we close the pipes to signal to the parent that we crashed
+            close (parentToChild[READING_END]);
+            close (childToParent[WRITING_END]);
+            close (childErrToParent[WRITING_END]);
 
-		// Write to this->parentToChild[WRITING_END] to write to stdin of the child
-		// Read from this->childToParent[READING_END] to read from stdout of child
-		// Read from this->childErrToParent[READING_END] to read from stderr of child
+            // Child should exit now.
+            _exit(-1);
 
-		break;
-	}
-	return NOTQTPROCESS_MAIN_APP;
+        default:
+            // This is the PARENT process
+
+            // Close unwanted ends of the pipes
+            close (parentToChild[READING_END]);
+            close (childToParent[WRITING_END]);
+            close (childErrToParent[WRITING_END]);
+
+            // Write to this->parentToChild[WRITING_END] to write to stdin of the child
+            // Read from this->childToParent[READING_END] to read from stdout of child
+            // Read from this->childErrToParent[READING_END] to read from stderr of child
+
+            break;
+    }
+    return NOTQTPROCESS_MAIN_APP;
 }
 
 
 // If no pid after a while, return false.
-bool
+    bool
 notQProcess::waitForStarted (void)
 {
-	unsigned int i=0;
-	while (this->pid == 0 && i<1000) {
-		usleep (1000);
-		i++;
-	}
-	if (this->pid>0) {
-		dbgln ("The process started!");
-		this->callbacks->startedSignal (this->progName);
-		this->signalledStart = true;
-		return true;
-	} else {
-		this->error = NOTQPROCFAILEDTOSTART;
-		this->callbacks->errorSignal (this->error);
-		return false;
-	}
+    unsigned int i=0;
+    while (this->pid == 0 && i<1000) {
+        usleep (1000);
+        i++;
+    }
+    if (this->pid>0) {
+        dbgln ("The process started!");
+        this->callbacks->startedSignal (this->progName);
+        this->signalledStart = true;
+        return true;
+    } else {
+        this->error = NOTQPROCFAILEDTOSTART;
+        this->callbacks->errorSignal (this->error);
+        return false;
+    }
 
 }
 
 // Send a TERM signal to the process.
-void
+    void
 notQProcess::terminate (void)
 {
-	kill (this->pid, 15); // 15 is TERM
-	// Now check if the process has gone and kill it with signal 9 (KILL)
-	this->pid = 0;
-	this->error = NOTQPROCNOERROR;
-	this->signalledStart = false;
-	return;
+    return;
+    kill (this->pid, 15); // 15 is TERM
+    // Now check if the process has gone and kill it with signal 9 (KILL)
+    this->pid = 0;
+    this->error = NOTQPROCNOERROR;
+    this->signalledStart = false;
+    return;
 }
 
 // Check on this process
-void
+    void
 notQProcess::probeProcess (void)
 {
-	// Has the process started?
-	if (!this->signalledStart) {
-		if (this->pid > 0) {
-			this->callbacks->startedSignal (this->progName);
-			this->signalledStart = true;
-			dbgln ("notQProcess::probeProcess set signalledStart and signalled the start...");
-		}
-	}
+    // Has the process started?
+    if (!this->signalledStart) {
+        if (this->pid > 0) {
+            this->callbacks->startedSignal (this->progName);
+            this->signalledStart = true;
+            dbgln ("notQProcess::probeProcess set signalledStart and signalled the start...");
+        }
+    }
 
-	// Check for error condition
-	if (this->error>0) {
-		this->callbacks->errorSignal (this->error);
-		dbgln ("have error in probeProcess, returning");
-		return;
-	}
+    // Check for error condition
+    if (this->error>0) {
+        this->callbacks->errorSignal (this->error);
+        dbgln ("have error in probeProcess, returning");
+        return;
+    }
 
-	if (this->pid == 0) {
-		// Not yet started.
-		return;
-	}
+    if (this->pid == 0) {
+        // Not yet started.
+        return;
+    }
 
-	// Why can't these 4 lines go in contructor?
-	this->p[0].fd = this->childToParent[READING_END];
-	this->p[0].events = POLLIN | POLLPRI;
-	this->p[1].fd = this->childErrToParent[READING_END];
-	this->p[1].events = POLLIN | POLLPRI;
+    // Why can't these 4 lines go in contructor?
+    this->p[0].fd = this->childToParent[READING_END];
+    this->p[0].events = POLLIN | POLLPRI;
+    this->p[1].fd = this->childErrToParent[READING_END];
+    this->p[1].events = POLLIN | POLLPRI;
 
-	// Poll to determine if data is available
-	this->p[0].revents = 0;
-	this->p[1].revents = 0;
+    // Poll to determine if data is available
+    this->p[0].revents = 0;
+    this->p[1].revents = 0;
 
-	poll (this->p, 2, 0);
+    poll (this->p, 2, 0);
 
-	if (this->p[0].revents & POLLNVAL || this->p[1].revents & POLLNVAL) {
-		dbgln ("notQProcess::probeProcess: pipes closed, process must have crashed");
-		this->error = NOTQPROCCRASHED;
-		this->callbacks->errorSignal (this->error);
-		return;
-	}
+    if (this->p[0].revents & POLLNVAL || this->p[1].revents & POLLNVAL) {
+        dbgln ("notQProcess::probeProcess: pipes closed, process must have crashed");
+        this->error = NOTQPROCCRASHED;
+        this->callbacks->errorSignal (this->error);
+        return;
+    }
 
-	if (this->p[0].revents & POLLIN || this->p[0].revents & POLLPRI) {
-		this->callbacks->readyReadStandardOutputSignal();
-	}
-	if (this->p[1].revents & POLLIN || this->p[1].revents & POLLPRI) {
-		this->callbacks->readyReadStandardErrorSignal();
-	}
+    if (this->p[0].revents & POLLIN || this->p[0].revents & POLLPRI) {
+        this->callbacks->readyReadStandardOutputSignal();
+    }
+    if (this->p[1].revents & POLLIN || this->p[1].revents & POLLPRI) {
+        this->callbacks->readyReadStandardErrorSignal();
+    }
 
-	// Is the process running? We check last, so that we get any
-	// messages on stdout/stderr that we may wish to process, such
-	// as error messages from nxssh key authentication.
-	int theError;
-	if (this->signalledStart == true) {
-		int rtn = 0;
-		if ((rtn = waitpid (this->pid, (int *)0, WNOHANG)) == this->pid) {
-			this->callbacks->processFinishedSignal (this->progName);
-			return;
-		} else if (rtn == -1) {
-			theError = errno;
-			if (theError != 10) { // We ignore errno 10 "no child" as this commonly occurs
-				cerr << "waitpid returned errno: " << theError;
-			}
-		} // else rtn == 0
-	}
+    // Is the process running? We check last, so that we get any
+    // messages on stdout/stderr that we may wish to process, such
+    // as error messages from nxssh key authentication.
+    int theError;
+    if (this->signalledStart == true) {
+        int rtn = 0;
+        if ((rtn = waitpid (this->pid, (int *)0, WNOHANG)) == this->pid) {
+            this->callbacks->processFinishedSignal (this->progName);
+            return;
+        } else if (rtn == -1) {
+            theError = errno;
+            if (theError != 10) { // We ignore errno 10 "no child" as this commonly occurs
+                cerr << "waitpid returned errno: " << theError;
+            }
+        } // else rtn == 0
+    }
 
-	return;
+    return;
 }
 
 // Read stdout pipe, without blocking.
-string
+    string
 notQProcess::readAllStandardOutput (void)
 {
-	string s;
-	int bytes = 0;
-	char c;
-	struct pollfd p;
-	
-	p.fd = this->childToParent[READING_END];
-	p.events = POLLIN | POLLPRI;
-	// We know we have at least one character to read, so seed revents
-	p.revents = POLLIN;
-	while (p.revents & POLLIN || p.revents & POLLPRI) {
-		// This read of 1 byte should never block
-		if ((bytes = read (this->childToParent[READING_END], &c, 1)) == 1) {
-			s.append (1, c);
-		}
-		p.revents = 0;
-		poll (&p, 1, 0);
-	}
-	return s;
+    string s;
+    int bytes = 0;
+    char c;
+    struct pollfd p;
+
+    p.fd = this->childToParent[READING_END];
+    p.events = POLLIN | POLLPRI;
+    // We know we have at least one character to read, so seed revents
+    p.revents = POLLIN;
+    while (p.revents & POLLIN || p.revents & POLLPRI) {
+        // This read of 1 byte should never block
+        if ((bytes = read (this->childToParent[READING_END], &c, 1)) == 1) {
+            s.append (1, c);
+        }
+        p.revents = 0;
+        poll (&p, 1, 0);
+    }
+    return s;
 }
 
 // Read stderr pipe without blocking
-string
+    string
 notQProcess::readAllStandardError (void)
 {
-	string s;
-	int bytes = 0;
-	char c;
-	struct pollfd p;
-	
-	p.fd = this->childErrToParent[READING_END];
-	p.events = POLLIN | POLLPRI;
-	// We know we have at least one character to read, so seed revents
-	p.revents = POLLIN;
-	while (p.revents & POLLIN || p.revents & POLLPRI) {
-		// This read of 1 byte should never block because a poll() call tells us there is data
-		if ((bytes = read (this->childErrToParent[READING_END], &c, 1)) == 1) {
-			s.append (1, c);
-		}
-		p.revents = 0;
-		poll (&p, 1, 0);
-	}
-	return s;
+    string s;
+    int bytes = 0;
+    char c;
+    struct pollfd p;
+
+    p.fd = this->childErrToParent[READING_END];
+    p.events = POLLIN | POLLPRI;
+    // We know we have at least one character to read, so seed revents
+    p.revents = POLLIN;
+    while (p.revents & POLLIN || p.revents & POLLPRI) {
+        // This read of 1 byte should never block because a poll() call tells us there is data
+        if ((bytes = read (this->childErrToParent[READING_END], &c, 1)) == 1) {
+            s.append (1, c);
+        }
+        p.revents = 0;
+        poll (&p, 1, 0);
+    }
+    return s;
 }
 
 //@}
@@ -328,44 +330,44 @@
 // Destructor
 notQTemporaryFile::~notQTemporaryFile ()
 {
-	this->close();
+    this->close();
 }
 
-void
+    void
 notQTemporaryFile::open (void)
 {
-	stringstream fn;
-	fn << "/tmp/notQt" << time(NULL);
-	this->theFileName = fn.str();
-	this->f.open (this->theFileName.c_str(), ios::in|ios::out|ios::trunc);
+    stringstream fn;
+    fn << "/tmp/notQt" << time(NULL);
+    this->theFileName = fn.str();
+    this->f.open (this->theFileName.c_str(), ios::in|ios::out|ios::trunc);
 }
 
-void
+    void
 notQTemporaryFile::write (string input)
 {
-	this->f << input;
+    this->f << input;
 }
 
-void
+    void
 notQTemporaryFile::close (void)
 {
-	if (this->f.is_open()) {
-		this->f.close();
-	}
+    if (this->f.is_open()) {
+        this->f.close();
+    }
 }
 
 // getter for fileName
-string
+    string
 notQTemporaryFile::fileName (void)
 {
-	return this->theFileName;
+    return this->theFileName;
 }
 
-void
+    void
 notQTemporaryFile::remove (void)
 {
-	this->close();
-	unlink (this->theFileName.c_str());
+    this->close();
+    unlink (this->theFileName.c_str());
 }
 //@}
 
@@ -385,105 +387,105 @@
 {
 }
 
-string
+    string
 notQtUtilities::simplify (string& input)
 {
-	string workingString;
-	unsigned int i=0, start, end;
+    string workingString;
+    unsigned int i=0, start, end;
 
-	// Find the first non-whitespace character.
-	while (input[i] != '\0' && 
-	       (input[i] == ' '  || input[i] == '\t' || input[i] == '\n' || input[i] == '\r')
-	       && i<input.size()) {
-		i++;
-	}
-	start=i;
+    // Find the first non-whitespace character.
+    while (input[i] != '\0' && 
+            (input[i] == ' '  || input[i] == '\t' || input[i] == '\n' || input[i] == '\r')
+            && i<input.size()) {
+        i++;
+    }
+    start=i;
 
-	// Now find the last non-whitespace character.
-	i = input.size();
-	i--;
-	while ((input[i] == ' '  || input[i] == '\t' || input[i] == '\n' || input[i] == '\r')
-	       && i>0) {
-		i--;
-	}
-	end = ++i;
-	
-	// Copy the substring into a working string.
-	if (end>start) {
-		workingString = input.substr (start, end-start);
-	} else {
-		return "";
-	}
+    // Now find the last non-whitespace character.
+    i = input.size();
+    i--;
+    while ((input[i] == ' '  || input[i] == '\t' || input[i] == '\n' || input[i] == '\r')
+            && i>0) {
+        i--;
+    }
+    end = ++i;
 
-	// Now we replace internal white spaces in workingString with single spaces.
-	for (i=workingString.size(); i>1; --i) {
-		if ( (workingString[i] == ' '   || workingString[i] == '\t'   
-		      || workingString[i] == '\n' || workingString[i] == '\r')
-		     &&
-		     (workingString[i-1] == ' ' || workingString[i-1] == '\t'
-		      ||  workingString[i-1] == '\n' || workingString[i-1] == '\r') ) {
-			// ...then this is a whitespace we can remove
-			workingString.erase(i,1);
+    // Copy the substring into a working string.
+    if (end>start) {
+        workingString = input.substr (start, end-start);
+    } else {
+        return "";
+    }
 
-		} else if ( (workingString[i] == '\t' ||  workingString[i] == '\n'
-			     || workingString[i] == '\r') 
-			    &&
-			    (workingString[i-1] != ' ' && workingString[i-1] != '\t'
-			     &&  workingString[i-1] != '\n' && workingString[i-1] != '\r') ) {
-			// ...then this is a non-space whitespace to be replaced
-			workingString.replace(i, 1, " ");
-		}
-	}
+    // Now we replace internal white spaces in workingString with single spaces.
+    for (i=workingString.size(); i>1; --i) {
+        if ( (workingString[i] == ' '   || workingString[i] == '\t'   
+                    || workingString[i] == '\n' || workingString[i] == '\r')
+                &&
+                (workingString[i-1] == ' ' || workingString[i-1] == '\t'
+                 ||  workingString[i-1] == '\n' || workingString[i-1] == '\r') ) {
+            // ...then this is a whitespace we can remove
+            workingString.erase(i,1);
 
-	return workingString;
+        } else if ( (workingString[i] == '\t' ||  workingString[i] == '\n'
+                    || workingString[i] == '\r') 
+                &&
+                (workingString[i-1] != ' ' && workingString[i-1] != '\t'
+                 &&  workingString[i-1] != '\n' && workingString[i-1] != '\r') ) {
+            // ...then this is a non-space whitespace to be replaced
+            workingString.replace(i, 1, " ");
+        }
+    }
+
+    return workingString;
 }
 
 // split based on token ' '
-void
+    void
 notQtUtilities::splitString (string& line, char token, vector<string>& rtn)
 {
-	rtn.clear();
-	unsigned int i=0;
-	while (i < (line.size())-1) {
-		string tstring;
-		while (line[i] && line[i] != token) {
-			tstring.push_back(line[i++]);
-		}
-		rtn.push_back(tstring);
-		i++;
-	}
-	return;
+    rtn.clear();
+    unsigned int i=0;
+    while (i < (line.size())-1) {
+        string tstring;
+        while (line[i] && line[i] != token) {
+            tstring.push_back(line[i++]);
+        }
+        rtn.push_back(tstring);
+        i++;
+    }
+    return;
 }
 
-void
+    void
 notQtUtilities::splitString (string& line, char token, list<string>& rtn)
 {
-	rtn.clear();
-	unsigned int i=0;
-	while (i < (line.size())-1) {
-		string tstring;
-		while (line[i] && line[i] != token) {
-			//dbgln ("tstring.push_back line[i] which is '" << line[i] << "'");
-			tstring.push_back(line[i++]);
-		}
-		//dbgln ("rtn.push_back() tstring which is '" + tstring + "'");
-		rtn.push_back(tstring);
-		i++;
-	}
-	return;
+    rtn.clear();
+    unsigned int i=0;
+    while (i < (line.size())-1) {
+        string tstring;
+        while (line[i] && line[i] != token) {
+            //dbgln ("tstring.push_back line[i] which is '" << line[i] << "'");
+            tstring.push_back(line[i++]);
+        }
+        //dbgln ("rtn.push_back() tstring which is '" + tstring + "'");
+        rtn.push_back(tstring);
+        i++;
+    }
+    return;
 }
 
-int
+    int
 notQtUtilities::ensureUnixNewlines (std::string& input)
 {
-	int num = 0;
+    int num = 0;
 
-	for (unsigned int i=0; i<input.size(); i++) {
-		if (input[i] == '\r') {
-			input.erase(i,1);
-			num++;
-		}
-	}
-	
-	return num; // The number of \r characters we found in the string.
+    for (unsigned int i=0; i<input.size(); i++) {
+        if (input[i] == '\r') {
+            input.erase(i,1);
+            num++;
+        }
+    }
+
+    return num; // The number of \r characters we found in the string.
 }



From gwright at mail.berlios.de  Tue Feb  5 01:10:06 2008
From: gwright at mail.berlios.de (gwright at BerliOS)
Date: Tue, 5 Feb 2008 01:10:06 +0100
Subject: [Freenx-cvs] r459 - nxcl/lib
Message-ID: <200802050010.m150A6nN000181@sheep.berlios.de>

Author: gwright
Date: 2008-02-05 01:10:06 +0100 (Tue, 05 Feb 2008)
New Revision: 459

Modified:
   nxcl/lib/nxclientlib.cpp
   nxcl/lib/nxclientlib.h
Log:
Stop this ridiculous pointer hackiness.


Modified: nxcl/lib/nxclientlib.cpp
===================================================================
--- nxcl/lib/nxclientlib.cpp	2008-02-04 22:11:47 UTC (rev 458)
+++ nxcl/lib/nxclientlib.cpp	2008-02-05 00:10:06 UTC (rev 459)
@@ -141,7 +141,11 @@
  * Implementation of the NXClientLib class
  */
 //@{
-NXClientLib::NXClientLib()
+NXClientLib::NXClientLib() :
+    nxsshProcess(new notQProcess()),
+    nxproxyProcess(new notQProcess()),
+    x11Process(new notQProcess()),
+    nxauthProcess(new notQProcess())
 {
     this->isFinished = false;
     this->readyForProxy = false;
@@ -151,16 +155,12 @@
 
     dbgln ("In NXClientLib constructor");
 
-    this->pNxsshProcess = &this->nxsshProcess;
-    this->pNxproxyProcess = &this->nxproxyProcess;
-    this->pX11Process = &this->x11Process;
-    this->pNxauthProcess = &this->nxauthProcess;
+    /* Set up callback pointers */
+    this->nxsshProcess->setCallbacks (&callbacks);
+    this->nxproxyProcess->setCallbacks (&callbacks);
+    this->x11Process->setCallbacks (&callbacks);
+    this->nxauthProcess->setCallbacks (&callbacks);
 
-    /* Set up callback pointers */
-    this->nxsshProcess.setCallbacks (&callbacks);
-    this->nxproxyProcess.setCallbacks (&callbacks);
-    this->x11Process.setCallbacks (&callbacks);
-    this->nxauthProcess.setCallbacks (&callbacks);
     this->session.setCallbacks (&callbacks);
     this->callbacks.setParent (this);
 
@@ -170,7 +170,7 @@
 NXClientLib::~NXClientLib()
 {
     dbgln ("In NXClientLib destructor");
-    this->nxsshProcess.terminate();
+    this->nxsshProcess->terminate();
 }
 
 void NXClientLib::invokeNXSSH (string publicKey, string serverHost,
@@ -183,7 +183,7 @@
     dbgln("invokeNXSSH called");
 
     // We use same environment for the process as was used for the
-    // parent, so remove nxsshProcess.setEnvironment();
+    // parent, so remove nxsshProcess->setEnvironment();
 
     // Start to build the arguments for the nxssh command.
     // notQProcess requires that argv[0] contains the program name
@@ -246,9 +246,9 @@
     // Find a path for the nxssh process using getPath()
     string nxsshPath = this->getPath ("nxssh");
 
-    this->nxsshProcess.start(nxsshPath, arguments);
+    this->nxsshProcess->start(nxsshPath, arguments);
 
-    if (this->nxsshProcess.waitForStarted() == false) {
+    if (this->nxsshProcess->waitForStarted() == false) {
         this->externalCallbacks->write
             (NXCL_PROCESS_ERROR, _("Error starting nxssh!"));
         this->isFinished = true;
@@ -266,7 +266,7 @@
 
 void NXClientLib::reset()
 {
-    this->nxsshProcess.terminate();
+    this->nxsshProcess->terminate();
     this->isFinished = false;
     this->proxyData.encrypted = false;
     this->password = false;	
@@ -279,12 +279,12 @@
         (NXCL_LOGIN_FAILED, _("Got \"Login Failed\""));
 
     this->isFinished = true;
-    this->nxsshProcess.terminate();
+    this->nxsshProcess->terminate();
 }
 
 void NXClientLib::processParseStdout()
 {
-    string message = nxsshProcess.readAllStandardOutput();
+    string message = nxsshProcess->readAllStandardOutput();
 
     this->externalCallbacks->stdoutSignal (message);
 
@@ -308,15 +308,15 @@
 
         int pid = response - 100000;
 
-        if (this->nxsshProcess.getPid() == pid) {
-            this->nxsshProcess.setError(NOTQPROCCRASHED);
+        if (this->nxsshProcess->getPid() == pid) {
+            this->nxsshProcess->setError(NOTQPROCCRASHED);
 
             this->externalCallbacks->error
                 (_("nxsshProcess crashed or exited"));
 
             this->isFinished = true;
-        } else if (this->nxproxyProcess.getPid() == pid) {
-            this->nxproxyProcess.setError(NOTQPROCCRASHED);
+        } else if (this->nxproxyProcess->getPid() == pid) {
+            this->nxproxyProcess->setError(NOTQPROCCRASHED);
 
             this->externalCallbacks->error
                 (_("nxproxyProcess crashed or exited"));
@@ -415,7 +415,7 @@
 
 void NXClientLib::processParseStderr()
 {
-    string message = nxsshProcess.readAllStandardError();
+    string message = nxsshProcess->readAllStandardError();
 
     dbgln ("In NXClientLib::processParseStderr for message: '"
             + message + "'(msg end)");
@@ -486,7 +486,7 @@
 
     dbgln ("Writing '" << data << "' to nxssh process.");
 
-    this->nxsshProcess.writeIn(data);
+    this->nxsshProcess->writeIn(data);
 
     if (password) {
         data = "********";
@@ -627,11 +627,11 @@
 
     string openPath = this->getPath("open");
     
-    this->x11Process.start(openPath, x11Arguments);
+    this->x11Process->start(openPath, x11Arguments);
 
     this->x11Probe = true;
     
-    if (this->x11Process.waitForStarted() == false) {
+    if (this->x11Process->waitForStarted() == false) {
         this->externalCallbacks->write
             (NXCL_PROCESS_ERROR, _("Error starting X11!"));
         this->isFinished = true;
@@ -726,9 +726,9 @@
 
     // Find a path for the nxproxy process using getPath()
     string nxproxyPath = this->getPath ("nxproxy");
-    this->nxproxyProcess.start(nxproxyPath, arguments);
+    this->nxproxyProcess->start(nxproxyPath, arguments);
 
-    if (this->nxproxyProcess.waitForStarted() == false) {
+    if (this->nxproxyProcess->waitForStarted() == false) {
         this->externalCallbacks->write
             (NXCL_PROCESS_ERROR, _("Error starting nxproxy!"));
         this->isFinished = true;
@@ -774,11 +774,11 @@
     nxauthArguments.push_back("MIT-MAGIC-COOKIE-1");
     nxauthArguments.push_back(cookie);
 
-    this->nxauthProcess.setCallbacks (&callbacks);
+    this->nxauthProcess->setCallbacks (&callbacks);
 
-    this->nxauthProcess.start("nxauth", nxauthArguments);
+    this->nxauthProcess->start("nxauth", nxauthArguments);
 
-    if (this->nxauthProcess.waitForStarted() == false) {
+    if (this->nxauthProcess->waitForStarted() == false) {
         this->externalCallbacks->write
             (NXCL_PROCESS_ERROR, _("Error starting nxauth!"));
         this->isFinished = true;
@@ -834,9 +834,9 @@
         dimensions = strtok(NULL, "x");
     }
 
-    this->x11Process.start("nxwin", nxwinArguments);
+    this->x11Process->start("nxwin", nxwinArguments);
 
-    if (this->x11Process.waitForStarted() == false) {
+    if (this->x11Process->waitForStarted() == false) {
         this->externalCallbacks->write
             (NXCL_PROCESS_ERROR, _("Error starting nxwin!"));
         this->isFinished = true;

Modified: nxcl/lib/nxclientlib.h
===================================================================
--- nxcl/lib/nxclientlib.h	2008-02-04 22:11:47 UTC (rev 458)
+++ nxcl/lib/nxclientlib.h	2008-02-05 00:10:06 UTC (rev 459)
@@ -313,22 +313,22 @@
 
             notQProcess* getNXSSHProcess (void)
             {
-                return this->pNxsshProcess;
+                return this->nxsshProcess;
             }
 
             notQProcess* getNXProxyProcess (void)
             {
-                return this->pNxproxyProcess;
+                return this->nxproxyProcess;
             }
 
             notQProcess* getX11Process (void)
             {
-                return this->pX11Process;
+                return this->x11Process;
             }
 
             notQProcess* getNXAuthProcess (void)
             {
-                return this->pNxauthProcess;
+                return this->nxauthProcess;
             }
 
             bool getIsFinished (void)
@@ -412,23 +412,19 @@
             /*!
              * The nxssh process object
              */
-            notQProcess nxsshProcess;
-            notQProcess* pNxsshProcess;
+            notQProcess* nxsshProcess;
             /*!
              * The nxproxy process object
              */
-            notQProcess nxproxyProcess;
-            notQProcess* pNxproxyProcess;
+            notQProcess* nxproxyProcess;
             /*!
              * The X11 process object
              */
-            notQProcess x11Process;
-            notQProcess* pX11Process;
+            notQProcess* x11Process;
             /*!
              * The nxauth process object
              */
-            notQProcess nxauthProcess;
-            notQProcess* pNxauthProcess;
+            notQProcess* nxauthProcess;
             /*!
              * A callbacks object. This holds the various callback
              * methods. The callback methods are defined here, but



From gwright at mail.berlios.de  Tue Feb  5 01:52:03 2008
From: gwright at mail.berlios.de (gwright at BerliOS)
Date: Tue, 5 Feb 2008 01:52:03 +0100
Subject: [Freenx-cvs] r460 - nxcl/lib
Message-ID: <200802050052.m150q3gY006875@sheep.berlios.de>

Author: gwright
Date: 2008-02-05 01:52:02 +0100 (Tue, 05 Feb 2008)
New Revision: 460

Modified:
   nxcl/lib/notQt.cpp
Log:
Woops.


Modified: nxcl/lib/notQt.cpp
===================================================================
--- nxcl/lib/notQt.cpp	2008-02-05 00:10:06 UTC (rev 459)
+++ nxcl/lib/notQt.cpp	2008-02-05 00:52:02 UTC (rev 460)
@@ -187,7 +187,6 @@
     void
 notQProcess::terminate (void)
 {
-    return;
     kill (this->pid, 15); // 15 is TERM
     // Now check if the process has gone and kill it with signal 9 (KILL)
     this->pid = 0;



From gwright at mail.berlios.de  Tue Feb  5 02:00:30 2008
From: gwright at mail.berlios.de (gwright at BerliOS)
Date: Tue, 5 Feb 2008 02:00:30 +0100
Subject: [Freenx-cvs] r461 - nxcl/lib
Message-ID: <200802050100.m1510Uvr007919@sheep.berlios.de>

Author: gwright
Date: 2008-02-05 02:00:30 +0100 (Tue, 05 Feb 2008)
New Revision: 461

Modified:
   nxcl/lib/nxclientlib.cpp
Log:
Fix segfault.


Modified: nxcl/lib/nxclientlib.cpp
===================================================================
--- nxcl/lib/nxclientlib.cpp	2008-02-05 00:52:02 UTC (rev 460)
+++ nxcl/lib/nxclientlib.cpp	2008-02-05 01:00:30 UTC (rev 461)
@@ -170,7 +170,6 @@
 NXClientLib::~NXClientLib()
 {
     dbgln ("In NXClientLib destructor");
-    this->nxsshProcess->terminate();
 }
 
 void NXClientLib::invokeNXSSH (string publicKey, string serverHost,



From gwright at mail.berlios.de  Tue Feb  5 02:00:56 2008
From: gwright at mail.berlios.de (gwright at BerliOS)
Date: Tue, 5 Feb 2008 02:00:56 +0100
Subject: [Freenx-cvs] r462 - qtnx
Message-ID: <200802050100.m1510uHL007990@sheep.berlios.de>

Author: gwright
Date: 2008-02-05 02:00:56 +0100 (Tue, 05 Feb 2008)
New Revision: 462

Modified:
   qtnx/qtnxwindow.cpp
   qtnx/qtnxwindow.h
Log:
Far better process handling code, general tweaks


Modified: qtnx/qtnxwindow.cpp
===================================================================
--- qtnx/qtnxwindow.cpp	2008-02-05 01:00:30 UTC (rev 461)
+++ qtnx/qtnxwindow.cpp	2008-02-05 01:00:56 UTC (rev 462)
@@ -31,15 +31,57 @@
 using namespace nxcl;
 using namespace std;
 
-QtNXWindow::QtNXWindow() : 
+QtNXWindow::QtNXWindow() :
     QMainWindow(),
+    sessionsDialog(NULL),
     processProbe(new QTimer()),
-    sessionsDialog(NULL)
+    m_NXClient(new NXClientLib())
 {
-    nxClient.setExternalCallbacks(&callback);
+    initiateNXClient();
 
     setupUI();
 
+    QDir dir(QDir::homePath() + "/.qtnx", "*.nxml");
+
+    for (unsigned int i = 0; i<dir.count(); i++) {
+        QString conn=dir[i];
+        ui_lg.session->addItem(conn.left(conn.length() - 5));
+    }
+
+    ui_lg.session->addItem(tr("Create new session"));
+
+    connect(ui_lg.connectButton, SIGNAL(pressed()), this, SLOT(startConnect()));
+    connect(ui_lg.password, SIGNAL(returnPressed()), this, SLOT(startConnect()));
+
+    connect(ui_lg.configureButton, SIGNAL(pressed()), this, SLOT(configure()));
+
+    connect(processProbe, SIGNAL(timeout()), this, SLOT(handleTimeout()));
+
+    connect(&callback, SIGNAL(logging(QString)), this, SLOT(handleLogging(QString)));
+
+    connect(&callback, SIGNAL(status(QString)), this,
+            SLOT(handleStatus(QString)));
+
+    connect(&callback, SIGNAL(suspendedSessions(QList<NXResumeData>)), this,
+            SLOT(handleSuspendedSessions(QList<NXResumeData>)));
+
+    connect(&callback, SIGNAL(noSessions()), this, SLOT(handleNoSessions()));
+
+    connect(&callback, SIGNAL(progress(int, QString)), this,
+            SLOT(handleProgress(int, QString)));
+
+    connect(&callback, SIGNAL(atCapacity()), this, SLOT(handleAtCapacity()));
+}
+
+QtNXWindow::~QtNXWindow()
+{
+    delete m_NXClient;
+}
+
+void QtNXWindow::initiateNXClient()
+{
+    m_NXClient->setExternalCallbacks(&callback);
+
 #ifdef Q_WS_MAC
     // We ship nxproxy and nxssh in qtnx.app/Contents/MacOS
     CFURLRef appUrlRef = CFBundleCopyBundleURL(CFBundleGetMainBundle());
@@ -55,37 +97,13 @@
     binaryPath = pathPtr;
     binaryPath.append("/Contents/MacOS");
 
-    nxClient.setCustomPath(binaryPath.toStdString());
+    m_NXClient->setCustomPath(binaryPath.toStdString());
 
     setenv("NX_SYSTEM", binaryPath.toStdString().c_str(), 1);
 #endif
 
-    QDir dir(QDir::homePath()+"/.qtnx","*.nxml");
-
-    for (unsigned int i=0;i<dir.count();i++) {
-        QString conn=dir[i];
-        ui_lg.session->addItem(conn.left(conn.length()-5));
-    }
-
-    ui_lg.session->addItem(tr("Create new session"));
-
-    connect(ui_lg.connectButton, SIGNAL(pressed()), this, SLOT(startConnect()));
-    connect(ui_lg.configureButton, SIGNAL(pressed()), this, SLOT(configure()));
-    connect(processProbe, SIGNAL(timeout()), this, SLOT(processProbeTimeout()));
-    connect(&callback, SIGNAL(logging(QString)), this, SLOT(logStd(QString)));
-    connect(&callback, SIGNAL(status(QString)), this, 
-            SLOT(updateStatusBar(QString)));
-    connect(&callback, SIGNAL(suspendedSessions(QList<NXResumeData>)), this,
-            SLOT(loadResumeDialog(QList<NXResumeData>)));
-    connect(&callback, SIGNAL(noSessions()), this, SLOT(noSessions()));
-    connect(&callback, SIGNAL(progress(int, QString)), this, 
-            SLOT(handleProgress(int, QString)));
 }
 
-QtNXWindow::~QtNXWindow()
-{
-}
-
 void QtNXWindow::setupUI()
 {
     logWindow = new QDialog(0);
@@ -135,60 +153,29 @@
         logWindow->hide();
 }
 
-void QtNXWindow::handleProgress(int id, QString message)
+void QtNXWindow::failedLogin()
 {
-    if (!message.isEmpty())
-        message = ": " + message;
+    QMessageBox::critical(this, tr("Authentication failure"),
+            tr("You have supplied an incorrect username or password for this " \
+               "NX server."), QMessageBox::Ok, QMessageBox::NoButton,
+            QMessageBox::NoButton);
 
-    switch (id) {
-        case NXCL_PROCESS_STARTED:
-            updateStatusBar(tr("Process started"));
-            break;
-        case NXCL_PROCESS_EXITED:
-            updateStatusBar(tr("Process exited"));
-            break;
-        case NXCL_AUTH_FAILED:
-            updateStatusBar(tr("Invalid authentication key"));
-            break;
-        case NXCL_AUTHENTICATING:
-            updateStatusBar(tr("Authenticating client"));
-            break;
-        case NXCL_LOGIN_FAILED:
-            updateStatusBar(tr("Invalid username or password"));
-            failedLogin();
-            break;
-        case NXCL_HOST_KEY_VERIFAILED:
-            updateStatusBar(tr("Host key verification failed"));
-            break;
-        case NXCL_INVOKE_PROXY:
-            updateStatusBar(tr("Starting NX proxy"));
-            break;
-        case NXCL_STARTING:
-            updateStatusBar(tr("Starting session"));
-            break;
-        case NXCL_FINISHED:
-            updateStatusBar(tr("Finished connecting"));
-            break;
-        case NXCL_ALIVE:
-            updateStatusBar(tr("NX session active"));
-            break;
-        case NXCL_PROCESS_ERROR:
-            updateStatusBar(tr("Process error"));
-            break;
-        default:
-            break;
-    }
+    statusBar->showMessage(tr("Login failed"));
+
+    delete m_NXClient;
+    m_NXClient = new NXClientLib();
+    initiateNXClient();
 }
 
-void QtNXWindow::failedLogin()
+void QtNXWindow::handleAtCapacity()
 {
-    QMessageBox::critical(this, tr("Authentication failure"),
-            tr("You have supplied an incorrect username or password for this \
-                NX server."), QMessageBox::Ok, QMessageBox::NoButton,
+    QMessageBox::critical(this, tr("Server at capacity"),
+            tr("This NX server is running at capacity."), QMessageBox::Ok, QMessageBox::NoButton,
             QMessageBox::NoButton);
 
     statusBar->showMessage(tr("Login failed"));
 }
+
 void QtNXWindow::sshContinue(QString message)
 {
     /*TODO: this is not functionally available in nxcl
@@ -201,9 +188,9 @@
             QMessageBox::NoButton);
 
     if (reply == QMessageBox::Yes)
-        nxClient.allowSSHConnect(true);
+        m_NXClient->allowSSHConnect(true);
     else
-        nxClient.allowSSHConnect(false);
+        m_NXClient->allowSSHConnect(false);
     */
 }
 
@@ -238,13 +225,13 @@
     string username = ui_lg.username->text().toStdString();
     string password = ui_lg.password->text().toStdString();
 
-    nxClient.setSessionData(&session);
+    m_NXClient->setSessionData(&session);
 
-    nxClient.setUsername(username);
-    nxClient.setPassword(password);
-    nxClient.setResolution(getWidth(), getHeight());
+    m_NXClient->setUsername(username);
+    m_NXClient->setPassword(password);
+    m_NXClient->setResolution(getWidth(), getHeight());
 
-    nxClient.setDepth(getDepth());
+    m_NXClient->setDepth(getDepth());
 
     QString keyPath = "id.key";
 
@@ -252,8 +239,9 @@
     keyPath = binaryPath + "/id.key";
 #endif
 
-    nxClient.invokeNXSSH(keyPath.toStdString(), config.serverHost, config.encryption, "",
+    m_NXClient->invokeNXSSH(keyPath.toStdString(), config.serverHost, config.encryption, "",
             config.serverPort);
+
     processProbe->start(30);
 }
 
@@ -298,28 +286,23 @@
     return qApp->desktop()->screenGeometry(this).height();
 }
 
-void QtNXWindow::updateStatusBar(QString message)
+void QtNXWindow::handleTimeout()
 {
-    statusBar->showMessage(message);
-}
+    notQProcess* p = m_NXClient->getNXSSHProcess();
 
-void QtNXWindow::processProbeTimeout()
-{
-    notQProcess* p = nxClient.getNXSSHProcess();
-
-    if ((nxClient.getIsFinished()) == false) {
-        if (nxClient.getReadyForProxy() == false) {
+    if ((m_NXClient->getIsFinished()) == false) {
+        if (m_NXClient->getReadyForProxy() == false) {
             p->probeProcess();
-        } else if (nxClient.needX11Probe()) {
+        } else if (m_NXClient->needX11Probe()) {
             p->probeProcess();
-            p = nxClient.getX11Process();
+            p = m_NXClient->getX11Process();
             p->probeProcess();
         } else {
             p->probeProcess();
-            p = nxClient.getNXProxyProcess();
+            p = m_NXClient->getNXProxyProcess();
             p->probeProcess();
         }
-        if (!nxClient.getSessionRunning())
+        if (!m_NXClient->getSessionRunning())
             processProbe->start(30);
         else {
             processProbe->start(2000);
@@ -347,7 +330,7 @@
         ui_lg.session->removeItem(0);
     }
 
-    QDir dir(QDir::homePath()+"/.qtnx","*.nxml");
+    QDir dir(QDir::homePath() + "/.qtnx", "*.nxml");
     for (unsigned int i=0;i<dir.count();i++) {
         QString conn=dir[i];
         ui_lg.session->addItem(conn.left(conn.length()-5));
@@ -355,8 +338,28 @@
     ui_lg.session->addItem(tr("Create new session"));
 }
 
-void QtNXWindow::loadResumeDialog(QList<NXResumeData> data)
+void QtNXWindow::resumeNewPressed()
 {
+    m_NXClient->setSessionData(&session);
+    m_NXClient->runSession();
+}
+
+void QtNXWindow::resumeResumePressed(QString id)
+{
+    session.id = id.toStdString();
+    session.suspended = true;
+    m_NXClient->setSessionData(&session);
+    m_NXClient->runSession();
+}
+
+void QtNXWindow::handleStatus(QString message)
+{
+    handleLogging(message);
+    statusBar->showMessage(message);
+}
+
+void QtNXWindow::handleSuspendedSessions(QList<NXResumeData> data)
+{
     delete sessionsDialog;
     sessionsDialog = new QtNXSessions(data);
     sessionsDialog->show();
@@ -366,28 +369,14 @@
             this, SLOT(resumeResumePressed(QString)));
 }
 
-void QtNXWindow::resumeNewPressed()
+void QtNXWindow::handleNoSessions()
 {
-    nxClient.setSessionData(&session);
-    nxClient.runSession();
-}
-
-void QtNXWindow::resumeResumePressed(QString id)
-{
-    session.id = id.toStdString();
-    session.suspended = true;
-    nxClient.setSessionData(&session);
-    nxClient.runSession();
-}
-
-void QtNXWindow::noSessions()
-{
     session.suspended = false;
-    nxClient.setSessionData(&session);
-    nxClient.runSession();
+    m_NXClient->setSessionData(&session);
+    m_NXClient->runSession();
 }
 
-void QtNXWindow::logStd(QString message)
+void QtNXWindow::handleLogging(QString message)
 {
     if (message.right(1) != "\n")
         cout << message.toStdString() << endl;
@@ -397,3 +386,48 @@
     log->setPlainText(log->toPlainText() + message);
 }
 
+void QtNXWindow::handleProgress(int id, QString message)
+{
+    if (!message.isEmpty())
+        message = ": " + message;
+
+    switch (id) {
+        case NXCL_PROCESS_STARTED:
+            handleStatus(tr("Process started"));
+            break;
+        case NXCL_PROCESS_EXITED:
+            handleStatus(tr("Process exited"));
+            break;
+        case NXCL_AUTH_FAILED:
+            handleStatus(tr("Invalid authentication key"));
+            break;
+        case NXCL_AUTHENTICATING:
+            handleStatus(tr("Authenticating client"));
+            break;
+        case NXCL_LOGIN_FAILED:
+            handleStatus(tr("Invalid username or password"));
+            failedLogin();
+            break;
+        case NXCL_HOST_KEY_VERIFAILED:
+            handleStatus(tr("Host key verification failed"));
+            break;
+        case NXCL_INVOKE_PROXY:
+            handleStatus(tr("Starting NX proxy"));
+            break;
+        case NXCL_STARTING:
+            handleStatus(tr("Starting session"));
+            break;
+        case NXCL_FINISHED:
+            handleStatus(tr("Finished connecting"));
+            break;
+        case NXCL_ALIVE:
+            handleStatus(tr("NX session active"));
+            break;
+        case NXCL_PROCESS_ERROR:
+            handleStatus(tr("Process error"));
+            break;
+        default:
+            break;
+    }
+}
+

Modified: qtnx/qtnxwindow.h
===================================================================
--- qtnx/qtnxwindow.h	2008-02-05 01:00:30 UTC (rev 461)
+++ qtnx/qtnxwindow.h	2008-02-05 01:00:56 UTC (rev 462)
@@ -76,7 +76,7 @@
           { emit noSessions(); }
 
         void serverCapacitySignal()
-          { emit serverAtCapacity(); }
+          { emit atCapacity(); }
     signals:
         void logging(QString);
         void status(QString);
@@ -86,7 +86,7 @@
 
         void suspendedSessions(QList<NXResumeData>);
         void noSessions();
-        void serverAtCapacity();
+        void atCapacity();
 };
 
 class QtNXWindow : public QMainWindow
@@ -100,22 +100,28 @@
         void startConnect();
         void configure();
         void configureClosed();
-        void loadResumeDialog(QList<NXResumeData>);
+
+        // Callback handlers
+        void handleSuspendedSessions(QList<NXResumeData>);
+        void handleNoSessions();
+        void handleLogging(QString);
+        void handleTimeout();
+        void handleProgress(int, QString);
+        void handleStatus(QString);
+        void handleAtCapacity();
+
         void resumeNewPressed();
         void resumeResumePressed(QString);
-        void noSessions();
         void sshContinue(QString);
-        void updateStatusBar(QString);
         void failedLogin();
         void showLogWindow();
-        void logStd(QString);
-        void processProbeTimeout();
-        void handleProgress(int, QString);
     private:
 
         // Decided to split up the code
         void setupUI();
         void setDefaultData();
+        void initiateNXClient();
+
         int getWidth();
         int getHeight();
         int getDepth();
@@ -126,7 +132,7 @@
         NXSessionData session;
         NXConfigData config;
 
-        NXClientLib nxClient;
+        NXClientLib *m_NXClient;
 
         QtNXSettings *settingsDialog;
         QtNXSessions *sessionsDialog;



From gwright at mail.berlios.de  Tue Feb  5 02:08:54 2008
From: gwright at mail.berlios.de (gwright at BerliOS)
Date: Tue, 5 Feb 2008 02:08:54 +0100
Subject: [Freenx-cvs] r463 - qtnx
Message-ID: <200802050108.m1518sM9008734@sheep.berlios.de>

Author: gwright
Date: 2008-02-05 02:08:54 +0100 (Tue, 05 Feb 2008)
New Revision: 463

Modified:
   qtnx/qtnxwindow.cpp
   qtnx/qtnxwindow.h
Log:
More code cleanups


Modified: qtnx/qtnxwindow.cpp
===================================================================
--- qtnx/qtnxwindow.cpp	2008-02-05 01:00:56 UTC (rev 462)
+++ qtnx/qtnxwindow.cpp	2008-02-05 01:08:54 UTC (rev 463)
@@ -33,11 +33,11 @@
 
 QtNXWindow::QtNXWindow() :
     QMainWindow(),
+    m_NXClient(new NXClientLib()),
     sessionsDialog(NULL),
-    processProbe(new QTimer()),
-    m_NXClient(new NXClientLib())
+    processProbe(new QTimer())
 {
-    initiateNXClient();
+    initialiseClient();
 
     setupUI();
 
@@ -78,7 +78,7 @@
     delete m_NXClient;
 }
 
-void QtNXWindow::initiateNXClient()
+void QtNXWindow::initialiseClient()
 {
     m_NXClient->setExternalCallbacks(&callback);
 
@@ -162,9 +162,7 @@
 
     statusBar->showMessage(tr("Login failed"));
 
-    delete m_NXClient;
-    m_NXClient = new NXClientLib();
-    initiateNXClient();
+    reinitialiseClient();
 }
 
 void QtNXWindow::handleAtCapacity()
@@ -174,8 +172,18 @@
             QMessageBox::NoButton);
 
     statusBar->showMessage(tr("Login failed"));
+
+    reinitialiseClient();
 }
 
+void QtNXWindow::reinitialiseClient()
+{
+    delete m_NXClient;
+
+    m_NXClient = new NXClientLib();
+    initialiseClient();
+}
+
 void QtNXWindow::sshContinue(QString message)
 {
     /*TODO: this is not functionally available in nxcl

Modified: qtnx/qtnxwindow.h
===================================================================
--- qtnx/qtnxwindow.h	2008-02-05 01:00:56 UTC (rev 462)
+++ qtnx/qtnxwindow.h	2008-02-05 01:08:54 UTC (rev 463)
@@ -120,7 +120,8 @@
         // Decided to split up the code
         void setupUI();
         void setDefaultData();
-        void initiateNXClient();
+        void initialiseClient();
+        void reinitialiseClient();
 
         int getWidth();
         int getHeight();



From gwright at mail.berlios.de  Tue Feb  5 02:22:46 2008
From: gwright at mail.berlios.de (gwright at BerliOS)
Date: Tue, 5 Feb 2008 02:22:46 +0100
Subject: [Freenx-cvs] r464 - qtnx
Message-ID: <200802050122.m151Mktb011328@sheep.berlios.de>

Author: gwright
Date: 2008-02-05 02:22:44 +0100 (Tue, 05 Feb 2008)
New Revision: 464

Modified:
   qtnx/qtnxsettings.cpp
   qtnx/qtnxsettings.h
   qtnx/qtnxwindow.cpp
   qtnx/qtnxwindow.h
Log:
Usability improvements with settings dialog


Modified: qtnx/qtnxsettings.cpp
===================================================================
--- qtnx/qtnxsettings.cpp	2008-02-05 01:08:54 UTC (rev 463)
+++ qtnx/qtnxsettings.cpp	2008-02-05 01:22:44 UTC (rev 464)
@@ -187,7 +187,7 @@
 void QtNXSettings::okPressed()
 {
     applyPressed();
-    emit closing();
+    emit closing(ui_sd.sessionName->text());
     close();
 }
 

Modified: qtnx/qtnxsettings.h
===================================================================
--- qtnx/qtnxsettings.h	2008-02-05 01:08:54 UTC (rev 463)
+++ qtnx/qtnxsettings.h	2008-02-05 01:22:44 UTC (rev 464)
@@ -48,7 +48,7 @@
         void keyDialogAccept();
         void keyDialogReject();
 signals:
-        void closing();
+        void closing(QString);
     private:
         Ui::SettingsDialog ui_sd;
         Ui::KeyDialog ui_kd;

Modified: qtnx/qtnxwindow.cpp
===================================================================
--- qtnx/qtnxwindow.cpp	2008-02-05 01:08:54 UTC (rev 463)
+++ qtnx/qtnxwindow.cpp	2008-02-05 01:22:44 UTC (rev 464)
@@ -327,23 +327,27 @@
     else
         settingsDialog = new QtNXSettings(ui_lg.session->currentText());
 
-    connect(settingsDialog, SIGNAL(closing()), this, SLOT(configureClosed()));
+    connect(settingsDialog, SIGNAL(closing(QString)), this, SLOT(configureClosed(QString)));
 
     settingsDialog->show();
 }
 
-void QtNXWindow::configureClosed()
+void QtNXWindow::configureClosed(QString sessionName)
 {
     while (ui_lg.session->count() != 0) {
         ui_lg.session->removeItem(0);
     }
 
     QDir dir(QDir::homePath() + "/.qtnx", "*.nxml");
-    for (unsigned int i=0;i<dir.count();i++) {
+    for (unsigned int i = 0; i < dir.count(); i++) {
         QString conn=dir[i];
-        ui_lg.session->addItem(conn.left(conn.length()-5));
+        ui_lg.session->addItem(conn.left(conn.length() - 5));
     }
+
     ui_lg.session->addItem(tr("Create new session"));
+
+    ui_lg.session->setCurrentIndex(
+            ui_lg.session->findText(sessionName));
 }
 
 void QtNXWindow::resumeNewPressed()

Modified: qtnx/qtnxwindow.h
===================================================================
--- qtnx/qtnxwindow.h	2008-02-05 01:08:54 UTC (rev 463)
+++ qtnx/qtnxwindow.h	2008-02-05 01:22:44 UTC (rev 464)
@@ -99,7 +99,7 @@
     public slots:
         void startConnect();
         void configure();
-        void configureClosed();
+        void configureClosed(QString);
 
         // Callback handlers
         void handleSuspendedSessions(QList<NXResumeData>);



From gwright at mail.berlios.de  Tue Feb  5 02:31:52 2008
From: gwright at mail.berlios.de (gwright at BerliOS)
Date: Tue, 5 Feb 2008 02:31:52 +0100
Subject: [Freenx-cvs] r465 - qtnx
Message-ID: <200802050131.m151VqEN011907@sheep.berlios.de>

Author: gwright
Date: 2008-02-05 02:31:50 +0100 (Tue, 05 Feb 2008)
New Revision: 465

Modified:
   qtnx/qtnxwindow.cpp
Log:
Keep log window scrolling


Modified: qtnx/qtnxwindow.cpp
===================================================================
--- qtnx/qtnxwindow.cpp	2008-02-05 01:22:44 UTC (rev 464)
+++ qtnx/qtnxwindow.cpp	2008-02-05 01:31:50 UTC (rev 465)
@@ -395,7 +395,7 @@
     else
         cout << message.toStdString();
 
-    log->setPlainText(log->toPlainText() + message);
+    ui_lw.output->append(message);
 }
 
 void QtNXWindow::handleProgress(int id, QString message)



From gwright at mail.berlios.de  Tue Feb  5 02:37:42 2008
From: gwright at mail.berlios.de (gwright at BerliOS)
Date: Tue, 5 Feb 2008 02:37:42 +0100
Subject: [Freenx-cvs] r466 - qtnx
Message-ID: <200802050137.m151bgI3012750@sheep.berlios.de>

Author: gwright
Date: 2008-02-05 02:37:40 +0100 (Tue, 05 Feb 2008)
New Revision: 466

Modified:
   qtnx/logindialog.ui
   qtnx/logwindow.ui
   qtnx/qtnxwindow.cpp
   qtnx/settingsdialog.ui
Log:
Fix window titles


Modified: qtnx/logindialog.ui
===================================================================
--- qtnx/logindialog.ui	2008-02-05 01:31:50 UTC (rev 465)
+++ qtnx/logindialog.ui	2008-02-05 01:37:40 UTC (rev 466)
@@ -1,7 +1,4 @@
 <ui version="4.0" >
- <author></author>
- <comment></comment>
- <exportmacro></exportmacro>
  <class>LoginDialog</class>
  <widget class="QWidget" name="LoginDialog" >
   <property name="geometry" >
@@ -13,15 +10,24 @@
    </rect>
   </property>
   <property name="windowTitle" >
-   <string>Form</string>
+   <string>QtNX</string>
   </property>
   <layout class="QVBoxLayout" >
-   <property name="margin" >
-    <number>9</number>
-   </property>
    <property name="spacing" >
     <number>6</number>
    </property>
+   <property name="leftMargin" >
+    <number>9</number>
+   </property>
+   <property name="topMargin" >
+    <number>9</number>
+   </property>
+   <property name="rightMargin" >
+    <number>9</number>
+   </property>
+   <property name="bottomMargin" >
+    <number>9</number>
+   </property>
    <item>
     <widget class="QLabel" name="logo" >
      <property name="text" >
@@ -34,20 +40,38 @@
    </item>
    <item>
     <layout class="QHBoxLayout" >
-     <property name="margin" >
-      <number>0</number>
-     </property>
      <property name="spacing" >
       <number>6</number>
      </property>
+     <property name="leftMargin" >
+      <number>0</number>
+     </property>
+     <property name="topMargin" >
+      <number>0</number>
+     </property>
+     <property name="rightMargin" >
+      <number>0</number>
+     </property>
+     <property name="bottomMargin" >
+      <number>0</number>
+     </property>
      <item>
       <layout class="QVBoxLayout" >
-       <property name="margin" >
-        <number>0</number>
-       </property>
        <property name="spacing" >
         <number>6</number>
        </property>
+       <property name="leftMargin" >
+        <number>0</number>
+       </property>
+       <property name="topMargin" >
+        <number>0</number>
+       </property>
+       <property name="rightMargin" >
+        <number>0</number>
+       </property>
+       <property name="bottomMargin" >
+        <number>0</number>
+       </property>
        <item>
         <widget class="QLabel" name="usernameLabel" >
          <property name="text" >
@@ -73,12 +97,21 @@
      </item>
      <item>
       <layout class="QVBoxLayout" >
-       <property name="margin" >
-        <number>0</number>
-       </property>
        <property name="spacing" >
         <number>6</number>
        </property>
+       <property name="leftMargin" >
+        <number>0</number>
+       </property>
+       <property name="topMargin" >
+        <number>0</number>
+       </property>
+       <property name="rightMargin" >
+        <number>0</number>
+       </property>
+       <property name="bottomMargin" >
+        <number>0</number>
+       </property>
        <item>
         <widget class="QLineEdit" name="username" >
          <property name="minimumSize" >
@@ -105,9 +138,7 @@
        <item>
         <widget class="QComboBox" name="session" >
          <property name="sizePolicy" >
-          <sizepolicy>
-           <hsizetype>3</hsizetype>
-           <vsizetype>0</vsizetype>
+          <sizepolicy vsizetype="Fixed" hsizetype="MinimumExpanding" >
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
@@ -120,12 +151,21 @@
    </item>
    <item>
     <layout class="QHBoxLayout" >
-     <property name="margin" >
-      <number>0</number>
-     </property>
      <property name="spacing" >
       <number>6</number>
      </property>
+     <property name="leftMargin" >
+      <number>0</number>
+     </property>
+     <property name="topMargin" >
+      <number>0</number>
+     </property>
+     <property name="rightMargin" >
+      <number>0</number>
+     </property>
+     <property name="bottomMargin" >
+      <number>0</number>
+     </property>
      <item>
       <widget class="QPushButton" name="configureButton" >
        <property name="text" >
@@ -157,7 +197,6 @@
    </item>
   </layout>
  </widget>
- <pixmapfunction></pixmapfunction>
  <resources/>
  <connections/>
 </ui>

Modified: qtnx/logwindow.ui
===================================================================
--- qtnx/logwindow.ui	2008-02-05 01:31:50 UTC (rev 465)
+++ qtnx/logwindow.ui	2008-02-05 01:37:40 UTC (rev 466)
@@ -1,7 +1,4 @@
 <ui version="4.0" >
- <author></author>
- <comment></comment>
- <exportmacro></exportmacro>
  <class>LogWindow</class>
  <widget class="QDialog" name="LogWindow" >
   <property name="geometry" >
@@ -13,15 +10,24 @@
    </rect>
   </property>
   <property name="windowTitle" >
-   <string>Dialog</string>
+   <string>QtNX Logging Output</string>
   </property>
   <layout class="QVBoxLayout" >
-   <property name="margin" >
-    <number>9</number>
-   </property>
    <property name="spacing" >
     <number>6</number>
    </property>
+   <property name="leftMargin" >
+    <number>9</number>
+   </property>
+   <property name="topMargin" >
+    <number>9</number>
+   </property>
+   <property name="rightMargin" >
+    <number>9</number>
+   </property>
+   <property name="bottomMargin" >
+    <number>9</number>
+   </property>
    <item>
     <widget class="QTextEdit" name="output" >
      <property name="font" >
@@ -45,7 +51,6 @@
    </item>
   </layout>
  </widget>
- <pixmapfunction></pixmapfunction>
  <resources/>
  <connections/>
 </ui>

Modified: qtnx/qtnxwindow.cpp
===================================================================
--- qtnx/qtnxwindow.cpp	2008-02-05 01:31:50 UTC (rev 465)
+++ qtnx/qtnxwindow.cpp	2008-02-05 01:37:40 UTC (rev 466)
@@ -37,6 +37,8 @@
     sessionsDialog(NULL),
     processProbe(new QTimer())
 {
+    setWindowTitle("QtNX");
+
     initialiseClient();
 
     setupUI();

Modified: qtnx/settingsdialog.ui
===================================================================
--- qtnx/settingsdialog.ui	2008-02-05 01:31:50 UTC (rev 465)
+++ qtnx/settingsdialog.ui	2008-02-05 01:37:40 UTC (rev 466)
@@ -1,7 +1,4 @@
 <ui version="4.0" >
- <author></author>
- <comment></comment>
- <exportmacro></exportmacro>
  <class>SettingsDialog</class>
  <widget class="QDialog" name="SettingsDialog" >
   <property name="geometry" >
@@ -13,18 +10,27 @@
    </rect>
   </property>
   <property name="windowTitle" >
-   <string>Dialog</string>
+   <string>QtNX Settings</string>
   </property>
   <property name="modal" >
    <bool>true</bool>
   </property>
   <layout class="QVBoxLayout" >
-   <property name="margin" >
-    <number>9</number>
-   </property>
    <property name="spacing" >
     <number>6</number>
    </property>
+   <property name="leftMargin" >
+    <number>9</number>
+   </property>
+   <property name="topMargin" >
+    <number>9</number>
+   </property>
+   <property name="rightMargin" >
+    <number>9</number>
+   </property>
+   <property name="bottomMargin" >
+    <number>9</number>
+   </property>
    <item>
     <widget class="QTabWidget" name="layoutTabs" >
      <property name="currentIndex" >
@@ -35,38 +41,63 @@
        <string>Basic</string>
       </attribute>
       <layout class="QVBoxLayout" >
-       <property name="margin" >
-        <number>9</number>
-       </property>
        <property name="spacing" >
         <number>6</number>
        </property>
+       <property name="leftMargin" >
+        <number>9</number>
+       </property>
+       <property name="topMargin" >
+        <number>9</number>
+       </property>
+       <property name="rightMargin" >
+        <number>9</number>
+       </property>
+       <property name="bottomMargin" >
+        <number>9</number>
+       </property>
        <item>
         <widget class="QGroupBox" name="generalGroup" >
          <property name="title" >
           <string>General</string>
          </property>
          <layout class="QVBoxLayout" >
-          <property name="margin" >
-           <number>9</number>
-          </property>
           <property name="spacing" >
            <number>6</number>
           </property>
+          <property name="leftMargin" >
+           <number>9</number>
+          </property>
+          <property name="topMargin" >
+           <number>9</number>
+          </property>
+          <property name="rightMargin" >
+           <number>9</number>
+          </property>
+          <property name="bottomMargin" >
+           <number>9</number>
+          </property>
           <item>
            <layout class="QHBoxLayout" >
-            <property name="margin" >
-             <number>0</number>
-            </property>
             <property name="spacing" >
              <number>6</number>
             </property>
+            <property name="leftMargin" >
+             <number>0</number>
+            </property>
+            <property name="topMargin" >
+             <number>0</number>
+            </property>
+            <property name="rightMargin" >
+             <number>0</number>
+            </property>
+            <property name="bottomMargin" >
+             <number>0</number>
+            </property>
             <item>
              <widget class="QLabel" name="sessionNameLabel" >
               <property name="sizePolicy" >
-               <sizepolicy>
-                <hsizetype>0</hsizetype>
-                <vsizetype>5</vsizetype>
+               <sizepolicy vsizetype="Preferred" hsizetype="Fixed" >
                 <horstretch>0</horstretch>
                 <verstretch>0</verstretch>
                </sizepolicy>
@@ -90,26 +121,42 @@
           <string>Server</string>
          </property>
          <layout class="QVBoxLayout" >
-          <property name="margin" >
-           <number>9</number>
-          </property>
           <property name="spacing" >
            <number>6</number>
           </property>
+          <property name="leftMargin" >
+           <number>9</number>
+          </property>
+          <property name="topMargin" >
+           <number>9</number>
+          </property>
+          <property name="rightMargin" >
+           <number>9</number>
+          </property>
+          <property name="bottomMargin" >
+           <number>9</number>
+          </property>
           <item>
            <layout class="QHBoxLayout" >
-            <property name="margin" >
-             <number>0</number>
-            </property>
             <property name="spacing" >
              <number>6</number>
             </property>
+            <property name="leftMargin" >
+             <number>0</number>
+            </property>
+            <property name="topMargin" >
+             <number>0</number>
+            </property>
+            <property name="rightMargin" >
+             <number>0</number>
+            </property>
+            <property name="bottomMargin" >
+             <number>0</number>
+            </property>
             <item>
              <widget class="QLabel" name="hostnameLabel" >
               <property name="sizePolicy" >
-               <sizepolicy>
-                <hsizetype>0</hsizetype>
-                <vsizetype>5</vsizetype>
+               <sizepolicy vsizetype="Preferred" hsizetype="Fixed" >
                 <horstretch>0</horstretch>
                 <verstretch>0</verstretch>
                </sizepolicy>
@@ -125,9 +172,7 @@
             <item>
              <widget class="QLabel" name="portLabel" >
               <property name="sizePolicy" >
-               <sizepolicy>
-                <hsizetype>0</hsizetype>
-                <vsizetype>5</vsizetype>
+               <sizepolicy vsizetype="Preferred" hsizetype="Fixed" >
                 <horstretch>0</horstretch>
                 <verstretch>0</verstretch>
                </sizepolicy>
@@ -139,12 +184,12 @@
             </item>
             <item>
              <widget class="QSpinBox" name="port" >
+              <property name="minimum" >
+               <number>1</number>
+              </property>
               <property name="maximum" >
                <number>65535</number>
               </property>
-              <property name="minimum" >
-               <number>1</number>
-              </property>
               <property name="value" >
                <number>22</number>
               </property>
@@ -154,12 +199,21 @@
           </item>
           <item>
            <layout class="QHBoxLayout" >
-            <property name="margin" >
-             <number>0</number>
-            </property>
             <property name="spacing" >
              <number>6</number>
             </property>
+            <property name="leftMargin" >
+             <number>0</number>
+            </property>
+            <property name="topMargin" >
+             <number>0</number>
+            </property>
+            <property name="rightMargin" >
+             <number>0</number>
+            </property>
+            <property name="bottomMargin" >
+             <number>0</number>
+            </property>
             <item>
              <widget class="QCheckBox" name="defaultKey" >
               <property name="text" >
@@ -191,26 +245,42 @@
           <string>Desktop</string>
          </property>
          <layout class="QVBoxLayout" >
-          <property name="margin" >
-           <number>9</number>
-          </property>
           <property name="spacing" >
            <number>6</number>
           </property>
+          <property name="leftMargin" >
+           <number>9</number>
+          </property>
+          <property name="topMargin" >
+           <number>9</number>
+          </property>
+          <property name="rightMargin" >
+           <number>9</number>
+          </property>
+          <property name="bottomMargin" >
+           <number>9</number>
+          </property>
           <item>
            <layout class="QHBoxLayout" >
-            <property name="margin" >
-             <number>0</number>
-            </property>
             <property name="spacing" >
              <number>6</number>
             </property>
+            <property name="leftMargin" >
+             <number>0</number>
+            </property>
+            <property name="topMargin" >
+             <number>0</number>
+            </property>
+            <property name="rightMargin" >
+             <number>0</number>
+            </property>
+            <property name="bottomMargin" >
+             <number>0</number>
+            </property>
             <item>
              <widget class="QLabel" name="platformLabel" >
               <property name="sizePolicy" >
-               <sizepolicy>
-                <hsizetype>0</hsizetype>
-                <vsizetype>5</vsizetype>
+               <sizepolicy vsizetype="Preferred" hsizetype="Fixed" >
                 <horstretch>0</horstretch>
                 <verstretch>0</verstretch>
                </sizepolicy>
@@ -242,9 +312,7 @@
             <item>
              <widget class="QLabel" name="typeLabel" >
               <property name="sizePolicy" >
-               <sizepolicy>
-                <hsizetype>0</hsizetype>
-                <vsizetype>5</vsizetype>
+               <sizepolicy vsizetype="Preferred" hsizetype="Fixed" >
                 <horstretch>0</horstretch>
                 <verstretch>0</verstretch>
                </sizepolicy>
@@ -286,9 +354,7 @@
             <item>
              <widget class="QLabel" name="linkLabel" >
               <property name="sizePolicy" >
-               <sizepolicy>
-                <hsizetype>0</hsizetype>
-                <vsizetype>5</vsizetype>
+               <sizepolicy vsizetype="Preferred" hsizetype="Fixed" >
                 <horstretch>0</horstretch>
                 <verstretch>0</verstretch>
                </sizepolicy>
@@ -331,12 +397,21 @@
           </item>
           <item>
            <layout class="QHBoxLayout" >
-            <property name="margin" >
-             <number>0</number>
-            </property>
             <property name="spacing" >
              <number>6</number>
             </property>
+            <property name="leftMargin" >
+             <number>0</number>
+            </property>
+            <property name="topMargin" >
+             <number>0</number>
+            </property>
+            <property name="rightMargin" >
+             <number>0</number>
+            </property>
+            <property name="bottomMargin" >
+             <number>0</number>
+            </property>
             <item>
              <spacer>
               <property name="orientation" >
@@ -371,26 +446,42 @@
           <string>Geometry</string>
          </property>
          <layout class="QVBoxLayout" >
-          <property name="margin" >
-           <number>9</number>
-          </property>
           <property name="spacing" >
            <number>6</number>
           </property>
+          <property name="leftMargin" >
+           <number>9</number>
+          </property>
+          <property name="topMargin" >
+           <number>9</number>
+          </property>
+          <property name="rightMargin" >
+           <number>9</number>
+          </property>
+          <property name="bottomMargin" >
+           <number>9</number>
+          </property>
           <item>
            <layout class="QHBoxLayout" >
-            <property name="margin" >
-             <number>0</number>
-            </property>
             <property name="spacing" >
              <number>6</number>
             </property>
+            <property name="leftMargin" >
+             <number>0</number>
+            </property>
+            <property name="topMargin" >
+             <number>0</number>
+            </property>
+            <property name="rightMargin" >
+             <number>0</number>
+            </property>
+            <property name="bottomMargin" >
+             <number>0</number>
+            </property>
             <item>
              <widget class="QLabel" name="resolutionLabel" >
               <property name="sizePolicy" >
-               <sizepolicy>
-                <hsizetype>0</hsizetype>
-                <vsizetype>5</vsizetype>
+               <sizepolicy vsizetype="Preferred" hsizetype="Fixed" >
                 <horstretch>0</horstretch>
                 <verstretch>0</verstretch>
                </sizepolicy>
@@ -432,9 +523,7 @@
             <item>
              <widget class="QLabel" name="compressionLabel" >
               <property name="sizePolicy" >
-               <sizepolicy>
-                <hsizetype>0</hsizetype>
-                <vsizetype>5</vsizetype>
+               <sizepolicy vsizetype="Preferred" hsizetype="Fixed" >
                 <horstretch>0</horstretch>
                 <verstretch>0</verstretch>
                </sizepolicy>
@@ -467,18 +556,25 @@
           </item>
           <item>
            <layout class="QHBoxLayout" >
-            <property name="margin" >
-             <number>0</number>
-            </property>
             <property name="spacing" >
              <number>6</number>
             </property>
+            <property name="leftMargin" >
+             <number>0</number>
+            </property>
+            <property name="topMargin" >
+             <number>0</number>
+            </property>
+            <property name="rightMargin" >
+             <number>0</number>
+            </property>
+            <property name="bottomMargin" >
+             <number>0</number>
+            </property>
             <item>
              <widget class="QLabel" name="qualityLabel" >
               <property name="sizePolicy" >
-               <sizepolicy>
-                <hsizetype>0</hsizetype>
-                <vsizetype>5</vsizetype>
+               <sizepolicy vsizetype="Preferred" hsizetype="Fixed" >
                 <horstretch>0</horstretch>
                 <verstretch>0</verstretch>
                </sizepolicy>
@@ -520,12 +616,21 @@
           </item>
           <item>
            <layout class="QHBoxLayout" >
-            <property name="margin" >
-             <number>0</number>
-            </property>
             <property name="spacing" >
              <number>6</number>
             </property>
+            <property name="leftMargin" >
+             <number>0</number>
+            </property>
+            <property name="topMargin" >
+             <number>0</number>
+            </property>
+            <property name="rightMargin" >
+             <number>0</number>
+            </property>
+            <property name="bottomMargin" >
+             <number>0</number>
+            </property>
             <item>
              <widget class="QCheckBox" name="render" >
               <property name="text" >
@@ -539,9 +644,7 @@
             <item>
              <widget class="QLabel" name="widthLabel" >
               <property name="sizePolicy" >
-               <sizepolicy>
-                <hsizetype>0</hsizetype>
-                <vsizetype>5</vsizetype>
+               <sizepolicy vsizetype="Preferred" hsizetype="Fixed" >
                 <horstretch>0</horstretch>
                 <verstretch>0</verstretch>
                </sizepolicy>
@@ -567,9 +670,7 @@
             <item>
              <widget class="QLabel" name="heightLabel" >
               <property name="sizePolicy" >
-               <sizepolicy>
-                <hsizetype>0</hsizetype>
-                <vsizetype>5</vsizetype>
+               <sizepolicy vsizetype="Preferred" hsizetype="Fixed" >
                 <horstretch>0</horstretch>
                 <verstretch>0</verstretch>
                </sizepolicy>
@@ -604,24 +705,42 @@
        <string>Advanced</string>
       </attribute>
       <layout class="QVBoxLayout" >
-       <property name="margin" >
-        <number>9</number>
-       </property>
        <property name="spacing" >
         <number>6</number>
        </property>
+       <property name="leftMargin" >
+        <number>9</number>
+       </property>
+       <property name="topMargin" >
+        <number>9</number>
+       </property>
+       <property name="rightMargin" >
+        <number>9</number>
+       </property>
+       <property name="bottomMargin" >
+        <number>9</number>
+       </property>
        <item>
         <widget class="QGroupBox" name="networkGroup" >
          <property name="title" >
           <string>Network</string>
          </property>
          <layout class="QVBoxLayout" >
-          <property name="margin" >
-           <number>9</number>
-          </property>
           <property name="spacing" >
            <number>6</number>
           </property>
+          <property name="leftMargin" >
+           <number>9</number>
+          </property>
+          <property name="topMargin" >
+           <number>9</number>
+          </property>
+          <property name="rightMargin" >
+           <number>9</number>
+          </property>
+          <property name="bottomMargin" >
+           <number>9</number>
+          </property>
           <item>
            <widget class="QCheckBox" name="encryption" >
             <property name="text" >
@@ -641,26 +760,42 @@
           <string>Cache</string>
          </property>
          <layout class="QVBoxLayout" >
-          <property name="margin" >
-           <number>9</number>
-          </property>
           <property name="spacing" >
            <number>6</number>
           </property>
+          <property name="leftMargin" >
+           <number>9</number>
+          </property>
+          <property name="topMargin" >
+           <number>9</number>
+          </property>
+          <property name="rightMargin" >
+           <number>9</number>
+          </property>
+          <property name="bottomMargin" >
+           <number>9</number>
+          </property>
           <item>
            <layout class="QHBoxLayout" >
-            <property name="margin" >
-             <number>0</number>
-            </property>
             <property name="spacing" >
              <number>6</number>
             </property>
+            <property name="leftMargin" >
+             <number>0</number>
+            </property>
+            <property name="topMargin" >
+             <number>0</number>
+            </property>
+            <property name="rightMargin" >
+             <number>0</number>
+            </property>
+            <property name="bottomMargin" >
+             <number>0</number>
+            </property>
             <item>
              <widget class="QLabel" name="memoryLabel" >
               <property name="sizePolicy" >
-               <sizepolicy>
-                <hsizetype>0</hsizetype>
-                <vsizetype>5</vsizetype>
+               <sizepolicy vsizetype="Preferred" hsizetype="Fixed" >
                 <horstretch>0</horstretch>
                 <verstretch>0</verstretch>
                </sizepolicy>
@@ -690,9 +825,7 @@
             <item>
              <widget class="QLabel" name="diskLabel" >
               <property name="sizePolicy" >
-               <sizepolicy>
-                <hsizetype>0</hsizetype>
-                <vsizetype>5</vsizetype>
+               <sizepolicy vsizetype="Preferred" hsizetype="Fixed" >
                 <horstretch>0</horstretch>
                 <verstretch>0</verstretch>
                </sizepolicy>
@@ -743,12 +876,21 @@
    </item>
    <item>
     <layout class="QHBoxLayout" >
-     <property name="margin" >
-      <number>0</number>
-     </property>
      <property name="spacing" >
       <number>6</number>
      </property>
+     <property name="leftMargin" >
+      <number>0</number>
+     </property>
+     <property name="topMargin" >
+      <number>0</number>
+     </property>
+     <property name="rightMargin" >
+      <number>0</number>
+     </property>
+     <property name="bottomMargin" >
+      <number>0</number>
+     </property>
      <item>
       <widget class="QPushButton" name="cancelButton" >
        <property name="text" >
@@ -787,7 +929,6 @@
    </item>
   </layout>
  </widget>
- <pixmapfunction></pixmapfunction>
  <resources/>
  <connections/>
 </ui>



From gwright at mail.berlios.de  Tue Feb  5 02:48:43 2008
From: gwright at mail.berlios.de (gwright at BerliOS)
Date: Tue, 5 Feb 2008 02:48:43 +0100
Subject: [Freenx-cvs] r467 - nxcl/lib
Message-ID: <200802050148.m151mhd0013844@sheep.berlios.de>

Author: gwright
Date: 2008-02-05 02:48:43 +0100 (Tue, 05 Feb 2008)
New Revision: 467

Modified:
   nxcl/lib/nxclientlib.cpp
   nxcl/lib/nxclientlib.h
Log:
Add a connected successfully signal


Modified: nxcl/lib/nxclientlib.cpp
===================================================================
--- nxcl/lib/nxclientlib.cpp	2008-02-05 01:37:40 UTC (rev 466)
+++ nxcl/lib/nxclientlib.cpp	2008-02-05 01:48:43 UTC (rev 467)
@@ -385,6 +385,7 @@
 
             this->externalCallbacks->write
                 (287, _("The session has been started successfully"));
+            this->externalCallbacks->connectedSuccessfullySignal();
             this->sessionRunning = true;
         }
 

Modified: nxcl/lib/nxclientlib.h
===================================================================
--- nxcl/lib/nxclientlib.h	2008-02-05 01:37:40 UTC (rev 466)
+++ nxcl/lib/nxclientlib.h	2008-02-05 01:48:43 UTC (rev 467)
@@ -64,7 +64,7 @@
             virtual void resumeSessionsSignal (list<NXResumeData>) {}
             virtual void noSessionsSignal (void) {}
             virtual void serverCapacitySignal (void) {}
-
+            virtual void connectedSuccessfullySignal (void) {}
     };
 
     /*!



From gwright at mail.berlios.de  Tue Feb  5 02:52:58 2008
From: gwright at mail.berlios.de (gwright at BerliOS)
Date: Tue, 5 Feb 2008 02:52:58 +0100
Subject: [Freenx-cvs] r468 - nxcl/lib
Message-ID: <200802050152.m151qwtQ015463@sheep.berlios.de>

Author: gwright
Date: 2008-02-05 02:52:57 +0100 (Tue, 05 Feb 2008)
New Revision: 468

Modified:
   nxcl/lib/nxclientlib.cpp
Log:
Sometimes this comes as stderr


Modified: nxcl/lib/nxclientlib.cpp
===================================================================
--- nxcl/lib/nxclientlib.cpp	2008-02-05 01:48:43 UTC (rev 467)
+++ nxcl/lib/nxclientlib.cpp	2008-02-05 01:52:57 UTC (rev 468)
@@ -453,6 +453,7 @@
 
             this->externalCallbacks->write
                 (287, _("The session has been started successfully"));
+            this->externalCallbacks->connectedSuccessfullySignal();
 
         } else if ((*msgiter).find
                 ("NX> 209 Remote host identification has changed") !=



From gwright at mail.berlios.de  Tue Feb  5 02:53:10 2008
From: gwright at mail.berlios.de (gwright at BerliOS)
Date: Tue, 5 Feb 2008 02:53:10 +0100
Subject: [Freenx-cvs] r469 - qtnx
Message-ID: <200802050153.m151rAoj015602@sheep.berlios.de>

Author: gwright
Date: 2008-02-05 02:53:10 +0100 (Tue, 05 Feb 2008)
New Revision: 469

Modified:
   qtnx/qtnxwindow.cpp
   qtnx/qtnxwindow.h
Log:
Close qtnx window upon successful launch of nxproxy


Modified: qtnx/qtnxwindow.cpp
===================================================================
--- qtnx/qtnxwindow.cpp	2008-02-05 01:52:57 UTC (rev 468)
+++ qtnx/qtnxwindow.cpp	2008-02-05 01:53:10 UTC (rev 469)
@@ -45,7 +45,7 @@
 
     QDir dir(QDir::homePath() + "/.qtnx", "*.nxml");
 
-    for (unsigned int i = 0; i<dir.count(); i++) {
+    for (unsigned int i = 0; i < dir.count(); i++) {
         QString conn=dir[i];
         ui_lg.session->addItem(conn.left(conn.length() - 5));
     }
@@ -73,6 +73,8 @@
             SLOT(handleProgress(int, QString)));
 
     connect(&callback, SIGNAL(atCapacity()), this, SLOT(handleAtCapacity()));
+
+    connect(&callback, SIGNAL(connectedSuccessfully()), this, SLOT(close()));
 }
 
 QtNXWindow::~QtNXWindow()

Modified: qtnx/qtnxwindow.h
===================================================================
--- qtnx/qtnxwindow.h	2008-02-05 01:52:57 UTC (rev 468)
+++ qtnx/qtnxwindow.h	2008-02-05 01:53:10 UTC (rev 469)
@@ -77,12 +77,17 @@
 
         void serverCapacitySignal()
           { emit atCapacity(); }
+
+        void connectedSuccessfullySignal()
+          { emit connectedSuccessfully(); }
+
     signals:
         void logging(QString);
         void status(QString);
         void progress(int, QString);
         void debug(QString);
         void error(QString);
+        void connectedSuccessfully();
 
         void suspendedSessions(QList<NXResumeData>);
         void noSessions();



From gwright at mail.berlios.de  Tue Feb  5 03:27:59 2008
From: gwright at mail.berlios.de (gwright at BerliOS)
Date: Tue, 5 Feb 2008 03:27:59 +0100
Subject: [Freenx-cvs] r470 - qtnx
Message-ID: <200802050227.m152RxTG026995@sheep.berlios.de>

Author: gwright
Date: 2008-02-05 03:27:58 +0100 (Tue, 05 Feb 2008)
New Revision: 470

Modified:
   qtnx/logindialog.ui
   qtnx/qtnxwindow.cpp
   qtnx/qtnxwindow.h
   qtnx/settingsdialog.ui
Log:
Make the automatic closing user configurable


Modified: qtnx/logindialog.ui
===================================================================
--- qtnx/logindialog.ui	2008-02-05 01:53:10 UTC (rev 469)
+++ qtnx/logindialog.ui	2008-02-05 02:27:58 UTC (rev 470)
@@ -191,6 +191,9 @@
        <property name="text" >
         <string>&amp;Connect</string>
        </property>
+       <property name="default" >
+        <bool>true</bool>
+       </property>
       </widget>
      </item>
     </layout>

Modified: qtnx/qtnxwindow.cpp
===================================================================
--- qtnx/qtnxwindow.cpp	2008-02-05 01:53:10 UTC (rev 469)
+++ qtnx/qtnxwindow.cpp	2008-02-05 02:27:58 UTC (rev 470)
@@ -74,7 +74,7 @@
 
     connect(&callback, SIGNAL(atCapacity()), this, SLOT(handleAtCapacity()));
 
-    connect(&callback, SIGNAL(connectedSuccessfully()), this, SLOT(close()));
+    connect(&callback, SIGNAL(connectedSuccessfully()), this, SLOT(quit()));
 }
 
 QtNXWindow::~QtNXWindow()
@@ -82,6 +82,11 @@
     delete m_NXClient;
 }
 
+void QtNXWindow::quit()
+{
+    if (closeWindowAction->isChecked())
+        qApp->quit();
+}
 void QtNXWindow::initialiseClient()
 {
     m_NXClient->setExternalCallbacks(&callback);
@@ -147,6 +152,17 @@
     connectionMenu->addAction(tr("Connect..."),
             this,
             SLOT(startConnect()));
+
+    connectionMenu->addSeparator();
+
+    closeWindowAction = connectionMenu->addAction(
+            tr("Close QtNX when NX starts"),
+            this,
+            SLOT(closeNXStarts()),
+            QKeySequence(tr("CTRL+O")));
+
+    closeWindowAction->setCheckable(true);
+    closeWindowAction->setChecked(true);
 }
 
 void QtNXWindow::showLogWindow()

Modified: qtnx/qtnxwindow.h
===================================================================
--- qtnx/qtnxwindow.h	2008-02-05 01:53:10 UTC (rev 469)
+++ qtnx/qtnxwindow.h	2008-02-05 02:27:58 UTC (rev 470)
@@ -120,6 +120,7 @@
         void sshContinue(QString);
         void failedLogin();
         void showLogWindow();
+        void quit();
     private:
 
         // Decided to split up the code
@@ -143,6 +144,7 @@
         QtNXSettings *settingsDialog;
         QtNXSessions *sessionsDialog;
 
+        QAction *closeWindowAction;
         QDialog *logWindow;
         QMenu *fileMenu;
         QMenu *connectionMenu;

Modified: qtnx/settingsdialog.ui
===================================================================
--- qtnx/settingsdialog.ui	2008-02-05 01:53:10 UTC (rev 469)
+++ qtnx/settingsdialog.ui	2008-02-05 02:27:58 UTC (rev 470)
@@ -916,6 +916,12 @@
        <property name="text" >
         <string>&amp;OK</string>
        </property>
+       <property name="autoDefault" >
+        <bool>false</bool>
+       </property>
+       <property name="default" >
+        <bool>true</bool>
+       </property>
       </widget>
      </item>
      <item>
@@ -923,6 +929,9 @@
        <property name="text" >
         <string>&amp;Apply</string>
        </property>
+       <property name="autoDefault" >
+        <bool>false</bool>
+       </property>
       </widget>
      </item>
     </layout>



From gwright at mail.berlios.de  Tue Feb  5 03:46:12 2008
From: gwright at mail.berlios.de (gwright at BerliOS)
Date: Tue, 5 Feb 2008 03:46:12 +0100
Subject: [Freenx-cvs] r471 - qtnx
Message-ID: <200802050246.m152kCnf028513@sheep.berlios.de>

Author: gwright
Date: 2008-02-05 03:46:11 +0100 (Tue, 05 Feb 2008)
New Revision: 471

Modified:
   qtnx/qtnxwindow.cpp
Log:
More tweaks


Modified: qtnx/qtnxwindow.cpp
===================================================================
--- qtnx/qtnxwindow.cpp	2008-02-05 02:27:58 UTC (rev 470)
+++ qtnx/qtnxwindow.cpp	2008-02-05 02:46:11 UTC (rev 471)
@@ -156,10 +156,7 @@
     connectionMenu->addSeparator();
 
     closeWindowAction = connectionMenu->addAction(
-            tr("Close QtNX when NX starts"),
-            this,
-            SLOT(closeNXStarts()),
-            QKeySequence(tr("CTRL+O")));
+            tr("Close QtNX when NX starts"));
 
     closeWindowAction->setCheckable(true);
     closeWindowAction->setChecked(true);



From gwright at mail.berlios.de  Tue Feb  5 08:36:59 2008
From: gwright at mail.berlios.de (gwright at BerliOS)
Date: Tue, 5 Feb 2008 08:36:59 +0100
Subject: [Freenx-cvs] r472 - nxcl/lib
Message-ID: <200802050736.m157axAf030568@sheep.berlios.de>

Author: gwright
Date: 2008-02-05 08:36:58 +0100 (Tue, 05 Feb 2008)
New Revision: 472

Modified:
   nxcl/lib/nxclientlib.cpp
Log:
Windows support - working


Modified: nxcl/lib/nxclientlib.cpp
===================================================================
--- nxcl/lib/nxclientlib.cpp	2008-02-05 02:46:11 UTC (rev 471)
+++ nxcl/lib/nxclientlib.cpp	2008-02-05 07:36:58 UTC (rev 472)
@@ -685,7 +685,7 @@
 
     string x11Display = "";
 
-#if NXCL_DARWIN
+#if NXCL_DARWIN || NXCL_CYGWIN
     x11Display = ",display=:0.0";
 #endif
 
@@ -742,106 +742,101 @@
     // Invoke NXWin.exe on Windows machines
 
     // See if XAUTHORITY path is set
+
     stringstream xauthority;
 
-    xauthority << getenv("XAUTHORITY");
+    xauthority << getenv("HOME") << "/.Xauthority";
 
-    if (xauthority.str().empty()) {
-        // We hardcode XAUTHORITY to $HOME/.Xauthority
-        xauthority << getenv("HOME") << "/.Xauthority";
-    }
+    // Now we set the environment variable
+    setenv("XAUTHORITY", xauthority.str().c_str(), 1);
 
-    // Now we add a cookie to this auth file
-
-    char hostname[256];
-
-    gethostname(hostname, 256);
-
-    string cookie = getSession()->generateCookie();
-    stringstream domain;
-
-    domain << getenv("HOME") << ":0.0";
-
-    list<string> nxauthArguments;
-
-    // These arguments taken from the 2X GPL client
-    // We're going to assume that nxauth is in PATH
-    nxauthArguments.push_back("nxauth");
-    nxauthArguments.push_back("-i");
-    nxauthArguments.push_back("-f");
-    nxauthArguments.push_back(xauthority.str());
-    nxauthArguments.push_back("add");
-    nxauthArguments.push_back(domain.str());
-    nxauthArguments.push_back("MIT-MAGIC-COOKIE-1");
-    nxauthArguments.push_back(cookie);
-
-    this->nxauthProcess->setCallbacks (&callbacks);
-
-    this->nxauthProcess->start("nxauth", nxauthArguments);
-
-    if (this->nxauthProcess->waitForStarted() == false) {
-        this->externalCallbacks->write
-            (NXCL_PROCESS_ERROR, _("Error starting nxauth!"));
-        this->isFinished = true;
-    }
-
     // Now we actually start NXWin.exe
-
     list<string> nxwinArguments;
 
     // Arguments taken from 2X
     nxwinArguments.push_back("NXWin");
-    nxwinArguments.push_back("-auth");
 
-    stringstream xauthPath;
-    xauthPath << "'" << xauthority.str() << "'";
-
-    nxwinArguments.push_back(xauthPath.str());
     nxwinArguments.push_back("-nowinkill");
     nxwinArguments.push_back("-clipboard");
     nxwinArguments.push_back("-noloadxkb");
+    nxwinArguments.push_back("-agent");
+    nxwinArguments.push_back("-hide");
+    nxwinArguments.push_back("-noreset");
+    nxwinArguments.push_back("-nolisten");
+    nxwinArguments.push_back("tcp");
 
     // TODO: If rootless, append "-multiwindow" and "-hide" but only
     // hide if not restoring
 
-    // Now we set up the font paths. By default this is $PWD/usr/X11R6/...
+    // Now we set up the font paths. By default this is $NX_SYSTEM/usr/X11R6/...
 
     stringstream fontPath;
 
-    fontPath << "\"" << "usr/X11R6/lib/X11/fonts/TTF" << "\","
-        << "\"" << "usr/X11R6/lib/X11/fonts/misc" << "\","
-        << "\"" << "usr/X11R6/lib/X11/fonts/Speedo" << "\","
-        << "\"" << "usr/X11R6/lib/X11/fonts/Type1" << "\","
-        << "\"" << "usr/X11R6/lib/X11/fonts/75dpi" << "\","
-        << "\"" << "usr/X11R6/lib/X11/fonts/100dpi" << "\"";
+    fontPath << getenv("NX_SYSTEM") << "/X11R6/lib/X11/fonts/base,"
+        << getenv("NX_SYSTEM") << "/X11R6/lib/X11/fonts/TTF";
 
     nxwinArguments.push_back("-fp");
     nxwinArguments.push_back(fontPath.str());
-    nxwinArguments.push_back("-agent");
-    nxwinArguments.push_back("-emulate3buttons");
-    nxwinArguments.push_back("-hide");
-    nxwinArguments.push_back("-noreset");
+
     nxwinArguments.push_back("-name");
     nxwinArguments.push_back("NXWin");
-    nxwinArguments.push_back("0");
+    nxwinArguments.push_back(":0");
 
     nxwinArguments.push_back("-screen");
     nxwinArguments.push_back("0");
 
-    char* dimensions = strtok(const_cast<char*>(resolution.c_str()), "x");
+    nxwinArguments.push_back(resolution);
 
-    while (dimensions != NULL) {
-        nxwinArguments.push_back(dimensions);
-        dimensions = strtok(NULL, "x");
-    }
+    nxwinArguments.push_back(":0");
+    nxwinArguments.push_back("-nokeyhook");
 
-    this->x11Process->start("nxwin", nxwinArguments);
+    string nxwinPath = this->getPath("nxwin");
 
+    this->x11Process->start(nxwinPath, nxwinArguments);
+
+    this->x11Probe = true;
+
     if (this->x11Process->waitForStarted() == false) {
         this->externalCallbacks->write
             (NXCL_PROCESS_ERROR, _("Error starting nxwin!"));
         this->isFinished = true;
     }
+
+    this->x11Probe = false;
+
+    list<string> nxauthArguments;
+
+    char hostname[256];
+
+    gethostname(hostname, 256);
+
+    string cookie = getSession()->generateCookie();
+    cookie.resize(32);
+
+    stringstream domain;
+
+    domain << hostname << "/unix:0";
+
+    // These arguments taken from the 2X GPL client
+    // We're going to assume that nxauth is in PATH
+    nxauthArguments.push_back("nxauth");
+    nxauthArguments.push_back("-i");
+    nxauthArguments.push_back("-f");
+    nxauthArguments.push_back(xauthority.str());
+    nxauthArguments.push_back("add");
+    nxauthArguments.push_back(domain.str());
+    nxauthArguments.push_back("MIT-MAGIC-COOKIE-1");
+    nxauthArguments.push_back(cookie);
+
+    this->nxauthProcess->setCallbacks (&callbacks);
+
+    this->nxauthProcess->start("nxauth", nxauthArguments);
+
+    if (this->nxauthProcess->waitForStarted() == false) {
+        this->externalCallbacks->write
+            (NXCL_PROCESS_ERROR, _("Error starting nxauth!"));
+        this->isFinished = true;
+    }
 #endif
 }
 



From gwright at mail.berlios.de  Tue Feb  5 09:37:03 2008
From: gwright at mail.berlios.de (gwright at BerliOS)
Date: Tue, 5 Feb 2008 09:37:03 +0100
Subject: [Freenx-cvs] r473 - qtnx
Message-ID: <200802050837.m158b3vU002927@sheep.berlios.de>

Author: gwright
Date: 2008-02-05 09:37:03 +0100 (Tue, 05 Feb 2008)
New Revision: 473

Modified:
   qtnx/qtnxwindow.cpp
Log:
Windows stuff


Modified: qtnx/qtnxwindow.cpp
===================================================================
--- qtnx/qtnxwindow.cpp	2008-02-05 07:36:58 UTC (rev 472)
+++ qtnx/qtnxwindow.cpp	2008-02-05 08:37:03 UTC (rev 473)
@@ -111,6 +111,16 @@
     setenv("NX_SYSTEM", binaryPath.toStdString().c_str(), 1);
 #endif
 
+#ifdef Q_CYGWIN_WIN
+    QString filePath = qApp->applicationDirPath();
+
+    // On Windows QtNX will ship with the NX system components in NX/ relative to the
+    // QtNX binary
+    filePath.append("/NX");
+    setenv("NX_SYSTEM", filePath.toStdString().c_str(), 1);
+    filePath.append("/bin");
+    m_NXClient->setCustomPath(filePath.toStdString());
+#endif
 }
 
 void QtNXWindow::setupUI()



From gwright at mail.berlios.de  Tue Feb  5 09:37:06 2008
From: gwright at mail.berlios.de (gwright at BerliOS)
Date: Tue, 5 Feb 2008 09:37:06 +0100
Subject: [Freenx-cvs] r474 - nxcl/lib
Message-ID: <200802050837.m158b6cN002959@sheep.berlios.de>

Author: gwright
Date: 2008-02-05 09:37:05 +0100 (Tue, 05 Feb 2008)
New Revision: 474

Modified:
   nxcl/lib/nxclientlib.cpp
Log:
More general tweaks


Modified: nxcl/lib/nxclientlib.cpp
===================================================================
--- nxcl/lib/nxclientlib.cpp	2008-02-05 08:37:03 UTC (rev 473)
+++ nxcl/lib/nxclientlib.cpp	2008-02-05 08:37:05 UTC (rev 474)
@@ -694,7 +694,6 @@
     if (proxyData.encrypted) {
         data << "nx/nx" << x11Display << ",session=session,encryption=1,cookie="
             << proxyData.cookie
-            << ",root=" << home << "/.nx"
             << ",id=" << proxyData.id << ",listen=" 
             << proxyData.port << ":" << proxyData.display << "\n";
         // may also need shmem=1,shpix=1,font=1,product=...
@@ -702,8 +701,7 @@
     } else {
         // Not tested yet
         data << "nx/nx" << x11Display << ",session=session,cookie=" << proxyData.cookie
-            << ",root=" << home
-            << "/.nx,id=" << proxyData.id
+            << ",id=" << proxyData.id
             // << ",connect=" << proxyData.server << ":" << proxyData.display
             << ",listen=" << proxyData.port << ":" << proxyData.display
             << "\n";



From gwright at mail.berlios.de  Wed Feb 13 04:47:56 2008
From: gwright at mail.berlios.de (gwright at BerliOS)
Date: Wed, 13 Feb 2008 04:47:56 +0100
Subject: [Freenx-cvs] r475 - nxcl/lib
Message-ID: <200802130347.m1D3lu0s001276@sheep.berlios.de>

Author: gwright
Date: 2008-02-13 04:47:52 +0100 (Wed, 13 Feb 2008)
New Revision: 475

Modified:
   nxcl/lib/nxclientlib.cpp
Log:
Get full path


Modified: nxcl/lib/nxclientlib.cpp
===================================================================
--- nxcl/lib/nxclientlib.cpp	2008-02-05 08:37:05 UTC (rev 474)
+++ nxcl/lib/nxclientlib.cpp	2008-02-13 03:47:52 UTC (rev 475)
@@ -828,8 +828,10 @@
 
     this->nxauthProcess->setCallbacks (&callbacks);
 
-    this->nxauthProcess->start("nxauth", nxauthArguments);
+    string nxauthPath = this->getPath("nxauth");
 
+    this->nxauthProcess->start(nxauthPath, nxauthArguments);
+
     if (this->nxauthProcess->waitForStarted() == false) {
         this->externalCallbacks->write
             (NXCL_PROCESS_ERROR, _("Error starting nxauth!"));



From gwright at mail.berlios.de  Wed Feb 13 05:18:21 2008
From: gwright at mail.berlios.de (gwright at BerliOS)
Date: Wed, 13 Feb 2008 05:18:21 +0100
Subject: [Freenx-cvs] r476 - nxcl/lib
Message-ID: <200802130418.m1D4ILYS003083@sheep.berlios.de>

Author: gwright
Date: 2008-02-13 05:18:20 +0100 (Wed, 13 Feb 2008)
New Revision: 476

Modified:
   nxcl/lib/nxclientlib.cpp
Log:
Fix screen geometry issues


Modified: nxcl/lib/nxclientlib.cpp
===================================================================
--- nxcl/lib/nxclientlib.cpp	2008-02-13 03:47:52 UTC (rev 475)
+++ nxcl/lib/nxclientlib.cpp	2008-02-13 04:18:20 UTC (rev 476)
@@ -608,14 +608,22 @@
 #if NXCL_CYGWIN
     NXSessionData* sessionData = getSession()->getSessionData();
 
-    stringstream resolution;
+    string res;
 
-    ostringstream dimensionX, dimensionY;
-    dimensionX << sessionData->xRes;
-    dimensionY << sessionData->yRes;
+    if (sessionData->geometry == "fullscreen") {
+        stringstream resolution;
 
-    resolution << dimensionX.str() << "x" << dimensionY.str();
-    startX11(resolution.str(), "");
+        ostringstream dimensionX, dimensionY;
+        dimensionX << sessionData->xRes;
+        dimensionY << sessionData->yRes;
+
+        resolution << dimensionX.str() << "x" << dimensionY.str();
+        res = resolution.str();
+    } else {
+        res = sessionData->geometry;
+    }
+
+    startX11(res, "");
 #endif
 
 #if NXCL_DARWIN



From gwright at mail.berlios.de  Wed Feb 13 05:31:23 2008
From: gwright at mail.berlios.de (gwright at BerliOS)
Date: Wed, 13 Feb 2008 05:31:23 +0100
Subject: [Freenx-cvs] r477 - qtnx
Message-ID: <200802130431.m1D4VNGi003877@sheep.berlios.de>

Author: gwright
Date: 2008-02-13 05:31:20 +0100 (Wed, 13 Feb 2008)
New Revision: 477

Added:
   qtnx/qtnxwin32.pro
Log:
Add separate qmake project file for Win32


Added: qtnx/qtnxwin32.pro
===================================================================
--- qtnx/qtnxwin32.pro	2008-02-13 04:18:20 UTC (rev 476)
+++ qtnx/qtnxwin32.pro	2008-02-13 04:31:20 UTC (rev 477)
@@ -0,0 +1,19 @@
+TEMPLATE	= app
+
+CONFIG		+= static qt warn_on release
+
+FORMS = settingsdialog.ui logindialog.ui sessionsdialog.ui keydialog.ui logwindow.ui
+
+SOURCES = main.cpp qtnxwindow.cpp qtnxsettings.cpp qtnxsessions.cpp nxparsexml.cpp nxwritexml.cpp
+
+HEADERS = qtnxwindow.h qtnxsettings.h qtnxsessions.h nxparsexml.h nxwritexml.h
+
+INCLUDEPATH	+= $(QTDIR)/include
+
+DEPENDPATH	+= $(QTDIR)/include
+
+QMAKE_LFLAGS += -Wl,-subsystem,windows
+
+QT += ui xml
+
+TARGET		= qtnx



From gwright at mail.berlios.de  Wed Feb 13 05:38:51 2008
From: gwright at mail.berlios.de (gwright at BerliOS)
Date: Wed, 13 Feb 2008 05:38:51 +0100
Subject: [Freenx-cvs] r478 - qtnx
Message-ID: <200802130438.m1D4cpFs004455@sheep.berlios.de>

Author: gwright
Date: 2008-02-13 05:38:51 +0100 (Wed, 13 Feb 2008)
New Revision: 478

Modified:
   qtnx/qtnxwin32.pro
   qtnx/qtnxwindow.cpp
Log:
Hardcode plastique style because windows xp's style freezes inexplicably


Modified: qtnx/qtnxwin32.pro
===================================================================
--- qtnx/qtnxwin32.pro	2008-02-13 04:31:20 UTC (rev 477)
+++ qtnx/qtnxwin32.pro	2008-02-13 04:38:51 UTC (rev 478)
@@ -17,3 +17,7 @@
 QT += ui xml
 
 TARGET		= qtnx
+
+QMAKE_CXXFLAGS += $$system(pkg-config --cflags nxcl)
+
+LIBS += $$system(pkg-config --libs nxcl)

Modified: qtnx/qtnxwindow.cpp
===================================================================
--- qtnx/qtnxwindow.cpp	2008-02-13 04:31:20 UTC (rev 477)
+++ qtnx/qtnxwindow.cpp	2008-02-13 04:38:51 UTC (rev 478)
@@ -37,6 +37,9 @@
     sessionsDialog(NULL),
     processProbe(new QTimer())
 {
+#ifdef Q_CYGWIN_WIN
+    qApp->setStyle("plastique");
+#endif
     setWindowTitle("QtNX");
 
     initialiseClient();



